├── .gitignore
├── LICENSE
├── README.md
├── bun.lockb
├── eslint.config.js
├── index.html
├── package.json
├── public
    ├── models
    │   ├── items
    │   │   └── coin.glb
    │   ├── npc
    │   │   └── luma.glb
    │   └── player
    │   │   └── mario.glb
    └── textures
    │   ├── dust
    │       └── dust.png
    │   └── luma
    │       ├── noiseColor.png
    │       ├── noiseTex.png
    │       ├── sparkles.png
    │       └── stars.webp
├── src
    ├── App.jsx
    ├── Composer.jsx
    ├── Lighting.jsx
    ├── PlayerController.jsx
    ├── coins
    │   └── Coins.jsx
    ├── constants.js
    ├── hooks
    │   └── useTouchScreen.js
    ├── index.css
    ├── main.jsx
    ├── mobile
    │   ├── Buttons.jsx
    │   ├── JoystickComponent.jsx
    │   ├── MobileControls.jsx
    │   └── react-joystick-component
    │   │   ├── LICENSE
    │   │   ├── README.md
    │   │   ├── build
    │   │       └── lib
    │   │       │   ├── Joystick.d.ts
    │   │       │   ├── Joystick.js
    │   │       │   ├── Joystick.js.map
    │   │       │   ├── enums
    │   │       │       ├── shape.enum.d.ts
    │   │       │       ├── shape.enum.js
    │   │       │       └── shape.enum.js.map
    │   │       │   ├── index.d.ts
    │   │       │   ├── index.js
    │   │       │   ├── index.js.map
    │   │       │   └── shapes
    │   │       │       ├── shape.bounds.factory.d.ts
    │   │       │       ├── shape.bounds.factory.js
    │   │       │       ├── shape.bounds.factory.js.map
    │   │       │       ├── shape.factory.d.ts
    │   │       │       ├── shape.factory.js
    │   │       │       └── shape.factory.js.map
    │   │   ├── package.json
    │   │   └── src
    │   │       ├── Joystick.tsx
    │   │       ├── enums
    │   │           └── shape.enum.ts
    │   │       ├── index.tsx
    │   │       └── shapes
    │   │           ├── shape.bounds.factory.ts
    │   │           └── shape.factory.ts
    ├── models
    │   ├── Luma
    │   │   ├── Glow.jsx
    │   │   ├── Luma.jsx
    │   │   ├── Particles.jsx
    │   │   └── Particles2.jsx
    │   └── Mario.jsx
    ├── particles
    │   └── Dust.jsx
    └── store
    │   └── store.js
└── vite.config.js


/.gitignore:
--------------------------------------------------------------------------------
 1 | # Logs
 2 | logs
 3 | *.log
 4 | npm-debug.log*
 5 | yarn-debug.log*
 6 | yarn-error.log*
 7 | pnpm-debug.log*
 8 | lerna-debug.log*
 9 | 
10 | node_modules
11 | dist
12 | dist-ssr
13 | *.local
14 | 
15 | # Editor directories and files
16 | .vscode/*
17 | !.vscode/extensions.json
18 | .idea
19 | .DS_Store
20 | *.suo
21 | *.ntvs*
22 | *.njsproj
23 | *.sln
24 | *.sw?
25 | 


--------------------------------------------------------------------------------
/LICENSE:
--------------------------------------------------------------------------------
  1 |                     GNU GENERAL PUBLIC LICENSE
  2 |                        Version 3, 29 June 2007
  3 | 
  4 |  Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
  5 |  Everyone is permitted to copy and distribute verbatim copies
  6 |  of this license document, but changing it is not allowed.
  7 | 
  8 |                             Preamble
  9 | 
 10 |   The GNU General Public License is a free, copyleft license for
 11 | software and other kinds of works.
 12 | 
 13 |   The licenses for most software and other practical works are designed
 14 | to take away your freedom to share and change the works.  By contrast,
 15 | the GNU General Public License is intended to guarantee your freedom to
 16 | share and change all versions of a program--to make sure it remains free
 17 | software for all its users.  We, the Free Software Foundation, use the
 18 | GNU General Public License for most of our software; it applies also to
 19 | any other work released this way by its authors.  You can apply it to
 20 | your programs, too.
 21 | 
 22 |   When we speak of free software, we are referring to freedom, not
 23 | price.  Our General Public Licenses are designed to make sure that you
 24 | have the freedom to distribute copies of free software (and charge for
 25 | them if you wish), that you receive source code or can get it if you
 26 | want it, that you can change the software or use pieces of it in new
 27 | free programs, and that you know you can do these things.
 28 | 
 29 |   To protect your rights, we need to prevent others from denying you
 30 | these rights or asking you to surrender the rights.  Therefore, you have
 31 | certain responsibilities if you distribute copies of the software, or if
 32 | you modify it: responsibilities to respect the freedom of others.
 33 | 
 34 |   For example, if you distribute copies of such a program, whether
 35 | gratis or for a fee, you must pass on to the recipients the same
 36 | freedoms that you received.  You must make sure that they, too, receive
 37 | or can get the source code.  And you must show them these terms so they
 38 | know their rights.
 39 | 
 40 |   Developers that use the GNU GPL protect your rights with two steps:
 41 | (1) assert copyright on the software, and (2) offer you this License
 42 | giving you legal permission to copy, distribute and/or modify it.
 43 | 
 44 |   For the developers' and authors' protection, the GPL clearly explains
 45 | that there is no warranty for this free software.  For both users' and
 46 | authors' sake, the GPL requires that modified versions be marked as
 47 | changed, so that their problems will not be attributed erroneously to
 48 | authors of previous versions.
 49 | 
 50 |   Some devices are designed to deny users access to install or run
 51 | modified versions of the software inside them, although the manufacturer
 52 | can do so.  This is fundamentally incompatible with the aim of
 53 | protecting users' freedom to change the software.  The systematic
 54 | pattern of such abuse occurs in the area of products for individuals to
 55 | use, which is precisely where it is most unacceptable.  Therefore, we
 56 | have designed this version of the GPL to prohibit the practice for those
 57 | products.  If such problems arise substantially in other domains, we
 58 | stand ready to extend this provision to those domains in future versions
 59 | of the GPL, as needed to protect the freedom of users.
 60 | 
 61 |   Finally, every program is threatened constantly by software patents.
 62 | States should not allow patents to restrict development and use of
 63 | software on general-purpose computers, but in those that do, we wish to
 64 | avoid the special danger that patents applied to a free program could
 65 | make it effectively proprietary.  To prevent this, the GPL assures that
 66 | patents cannot be used to render the program non-free.
 67 | 
 68 |   The precise terms and conditions for copying, distribution and
 69 | modification follow.
 70 | 
 71 |                        TERMS AND CONDITIONS
 72 | 
 73 |   0. Definitions.
 74 | 
 75 |   "This License" refers to version 3 of the GNU General Public License.
 76 | 
 77 |   "Copyright" also means copyright-like laws that apply to other kinds of
 78 | works, such as semiconductor masks.
 79 | 
 80 |   "The Program" refers to any copyrightable work licensed under this
 81 | License.  Each licensee is addressed as "you".  "Licensees" and
 82 | "recipients" may be individuals or organizations.
 83 | 
 84 |   To "modify" a work means to copy from or adapt all or part of the work
 85 | in a fashion requiring copyright permission, other than the making of an
 86 | exact copy.  The resulting work is called a "modified version" of the
 87 | earlier work or a work "based on" the earlier work.
 88 | 
 89 |   A "covered work" means either the unmodified Program or a work based
 90 | on the Program.
 91 | 
 92 |   To "propagate" a work means to do anything with it that, without
 93 | permission, would make you directly or secondarily liable for
 94 | infringement under applicable copyright law, except executing it on a
 95 | computer or modifying a private copy.  Propagation includes copying,
 96 | distribution (with or without modification), making available to the
 97 | public, and in some countries other activities as well.
 98 | 
 99 |   To "convey" a work means any kind of propagation that enables other
100 | parties to make or receive copies.  Mere interaction with a user through
101 | a computer network, with no transfer of a copy, is not conveying.
102 | 
103 |   An interactive user interface displays "Appropriate Legal Notices"
104 | to the extent that it includes a convenient and prominently visible
105 | feature that (1) displays an appropriate copyright notice, and (2)
106 | tells the user that there is no warranty for the work (except to the
107 | extent that warranties are provided), that licensees may convey the
108 | work under this License, and how to view a copy of this License.  If
109 | the interface presents a list of user commands or options, such as a
110 | menu, a prominent item in the list meets this criterion.
111 | 
112 |   1. Source Code.
113 | 
114 |   The "source code" for a work means the preferred form of the work
115 | for making modifications to it.  "Object code" means any non-source
116 | form of a work.
117 | 
118 |   A "Standard Interface" means an interface that either is an official
119 | standard defined by a recognized standards body, or, in the case of
120 | interfaces specified for a particular programming language, one that
121 | is widely used among developers working in that language.
122 | 
123 |   The "System Libraries" of an executable work include anything, other
124 | than the work as a whole, that (a) is included in the normal form of
125 | packaging a Major Component, but which is not part of that Major
126 | Component, and (b) serves only to enable use of the work with that
127 | Major Component, or to implement a Standard Interface for which an
128 | implementation is available to the public in source code form.  A
129 | "Major Component", in this context, means a major essential component
130 | (kernel, window system, and so on) of the specific operating system
131 | (if any) on which the executable work runs, or a compiler used to
132 | produce the work, or an object code interpreter used to run it.
133 | 
134 |   The "Corresponding Source" for a work in object code form means all
135 | the source code needed to generate, install, and (for an executable
136 | work) run the object code and to modify the work, including scripts to
137 | control those activities.  However, it does not include the work's
138 | System Libraries, or general-purpose tools or generally available free
139 | programs which are used unmodified in performing those activities but
140 | which are not part of the work.  For example, Corresponding Source
141 | includes interface definition files associated with source files for
142 | the work, and the source code for shared libraries and dynamically
143 | linked subprograms that the work is specifically designed to require,
144 | such as by intimate data communication or control flow between those
145 | subprograms and other parts of the work.
146 | 
147 |   The Corresponding Source need not include anything that users
148 | can regenerate automatically from other parts of the Corresponding
149 | Source.
150 | 
151 |   The Corresponding Source for a work in source code form is that
152 | same work.
153 | 
154 |   2. Basic Permissions.
155 | 
156 |   All rights granted under this License are granted for the term of
157 | copyright on the Program, and are irrevocable provided the stated
158 | conditions are met.  This License explicitly affirms your unlimited
159 | permission to run the unmodified Program.  The output from running a
160 | covered work is covered by this License only if the output, given its
161 | content, constitutes a covered work.  This License acknowledges your
162 | rights of fair use or other equivalent, as provided by copyright law.
163 | 
164 |   You may make, run and propagate covered works that you do not
165 | convey, without conditions so long as your license otherwise remains
166 | in force.  You may convey covered works to others for the sole purpose
167 | of having them make modifications exclusively for you, or provide you
168 | with facilities for running those works, provided that you comply with
169 | the terms of this License in conveying all material for which you do
170 | not control copyright.  Those thus making or running the covered works
171 | for you must do so exclusively on your behalf, under your direction
172 | and control, on terms that prohibit them from making any copies of
173 | your copyrighted material outside their relationship with you.
174 | 
175 |   Conveying under any other circumstances is permitted solely under
176 | the conditions stated below.  Sublicensing is not allowed; section 10
177 | makes it unnecessary.
178 | 
179 |   3. Protecting Users' Legal Rights From Anti-Circumvention Law.
180 | 
181 |   No covered work shall be deemed part of an effective technological
182 | measure under any applicable law fulfilling obligations under article
183 | 11 of the WIPO copyright treaty adopted on 20 December 1996, or
184 | similar laws prohibiting or restricting circumvention of such
185 | measures.
186 | 
187 |   When you convey a covered work, you waive any legal power to forbid
188 | circumvention of technological measures to the extent such circumvention
189 | is effected by exercising rights under this License with respect to
190 | the covered work, and you disclaim any intention to limit operation or
191 | modification of the work as a means of enforcing, against the work's
192 | users, your or third parties' legal rights to forbid circumvention of
193 | technological measures.
194 | 
195 |   4. Conveying Verbatim Copies.
196 | 
197 |   You may convey verbatim copies of the Program's source code as you
198 | receive it, in any medium, provided that you conspicuously and
199 | appropriately publish on each copy an appropriate copyright notice;
200 | keep intact all notices stating that this License and any
201 | non-permissive terms added in accord with section 7 apply to the code;
202 | keep intact all notices of the absence of any warranty; and give all
203 | recipients a copy of this License along with the Program.
204 | 
205 |   You may charge any price or no price for each copy that you convey,
206 | and you may offer support or warranty protection for a fee.
207 | 
208 |   5. Conveying Modified Source Versions.
209 | 
210 |   You may convey a work based on the Program, or the modifications to
211 | produce it from the Program, in the form of source code under the
212 | terms of section 4, provided that you also meet all of these conditions:
213 | 
214 |     a) The work must carry prominent notices stating that you modified
215 |     it, and giving a relevant date.
216 | 
217 |     b) The work must carry prominent notices stating that it is
218 |     released under this License and any conditions added under section
219 |     7.  This requirement modifies the requirement in section 4 to
220 |     "keep intact all notices".
221 | 
222 |     c) You must license the entire work, as a whole, under this
223 |     License to anyone who comes into possession of a copy.  This
224 |     License will therefore apply, along with any applicable section 7
225 |     additional terms, to the whole of the work, and all its parts,
226 |     regardless of how they are packaged.  This License gives no
227 |     permission to license the work in any other way, but it does not
228 |     invalidate such permission if you have separately received it.
229 | 
230 |     d) If the work has interactive user interfaces, each must display
231 |     Appropriate Legal Notices; however, if the Program has interactive
232 |     interfaces that do not display Appropriate Legal Notices, your
233 |     work need not make them do so.
234 | 
235 |   A compilation of a covered work with other separate and independent
236 | works, which are not by their nature extensions of the covered work,
237 | and which are not combined with it such as to form a larger program,
238 | in or on a volume of a storage or distribution medium, is called an
239 | "aggregate" if the compilation and its resulting copyright are not
240 | used to limit the access or legal rights of the compilation's users
241 | beyond what the individual works permit.  Inclusion of a covered work
242 | in an aggregate does not cause this License to apply to the other
243 | parts of the aggregate.
244 | 
245 |   6. Conveying Non-Source Forms.
246 | 
247 |   You may convey a covered work in object code form under the terms
248 | of sections 4 and 5, provided that you also convey the
249 | machine-readable Corresponding Source under the terms of this License,
250 | in one of these ways:
251 | 
252 |     a) Convey the object code in, or embodied in, a physical product
253 |     (including a physical distribution medium), accompanied by the
254 |     Corresponding Source fixed on a durable physical medium
255 |     customarily used for software interchange.
256 | 
257 |     b) Convey the object code in, or embodied in, a physical product
258 |     (including a physical distribution medium), accompanied by a
259 |     written offer, valid for at least three years and valid for as
260 |     long as you offer spare parts or customer support for that product
261 |     model, to give anyone who possesses the object code either (1) a
262 |     copy of the Corresponding Source for all the software in the
263 |     product that is covered by this License, on a durable physical
264 |     medium customarily used for software interchange, for a price no
265 |     more than your reasonable cost of physically performing this
266 |     conveying of source, or (2) access to copy the
267 |     Corresponding Source from a network server at no charge.
268 | 
269 |     c) Convey individual copies of the object code with a copy of the
270 |     written offer to provide the Corresponding Source.  This
271 |     alternative is allowed only occasionally and noncommercially, and
272 |     only if you received the object code with such an offer, in accord
273 |     with subsection 6b.
274 | 
275 |     d) Convey the object code by offering access from a designated
276 |     place (gratis or for a charge), and offer equivalent access to the
277 |     Corresponding Source in the same way through the same place at no
278 |     further charge.  You need not require recipients to copy the
279 |     Corresponding Source along with the object code.  If the place to
280 |     copy the object code is a network server, the Corresponding Source
281 |     may be on a different server (operated by you or a third party)
282 |     that supports equivalent copying facilities, provided you maintain
283 |     clear directions next to the object code saying where to find the
284 |     Corresponding Source.  Regardless of what server hosts the
285 |     Corresponding Source, you remain obligated to ensure that it is
286 |     available for as long as needed to satisfy these requirements.
287 | 
288 |     e) Convey the object code using peer-to-peer transmission, provided
289 |     you inform other peers where the object code and Corresponding
290 |     Source of the work are being offered to the general public at no
291 |     charge under subsection 6d.
292 | 
293 |   A separable portion of the object code, whose source code is excluded
294 | from the Corresponding Source as a System Library, need not be
295 | included in conveying the object code work.
296 | 
297 |   A "User Product" is either (1) a "consumer product", which means any
298 | tangible personal property which is normally used for personal, family,
299 | or household purposes, or (2) anything designed or sold for incorporation
300 | into a dwelling.  In determining whether a product is a consumer product,
301 | doubtful cases shall be resolved in favor of coverage.  For a particular
302 | product received by a particular user, "normally used" refers to a
303 | typical or common use of that class of product, regardless of the status
304 | of the particular user or of the way in which the particular user
305 | actually uses, or expects or is expected to use, the product.  A product
306 | is a consumer product regardless of whether the product has substantial
307 | commercial, industrial or non-consumer uses, unless such uses represent
308 | the only significant mode of use of the product.
309 | 
310 |   "Installation Information" for a User Product means any methods,
311 | procedures, authorization keys, or other information required to install
312 | and execute modified versions of a covered work in that User Product from
313 | a modified version of its Corresponding Source.  The information must
314 | suffice to ensure that the continued functioning of the modified object
315 | code is in no case prevented or interfered with solely because
316 | modification has been made.
317 | 
318 |   If you convey an object code work under this section in, or with, or
319 | specifically for use in, a User Product, and the conveying occurs as
320 | part of a transaction in which the right of possession and use of the
321 | User Product is transferred to the recipient in perpetuity or for a
322 | fixed term (regardless of how the transaction is characterized), the
323 | Corresponding Source conveyed under this section must be accompanied
324 | by the Installation Information.  But this requirement does not apply
325 | if neither you nor any third party retains the ability to install
326 | modified object code on the User Product (for example, the work has
327 | been installed in ROM).
328 | 
329 |   The requirement to provide Installation Information does not include a
330 | requirement to continue to provide support service, warranty, or updates
331 | for a work that has been modified or installed by the recipient, or for
332 | the User Product in which it has been modified or installed.  Access to a
333 | network may be denied when the modification itself materially and
334 | adversely affects the operation of the network or violates the rules and
335 | protocols for communication across the network.
336 | 
337 |   Corresponding Source conveyed, and Installation Information provided,
338 | in accord with this section must be in a format that is publicly
339 | documented (and with an implementation available to the public in
340 | source code form), and must require no special password or key for
341 | unpacking, reading or copying.
342 | 
343 |   7. Additional Terms.
344 | 
345 |   "Additional permissions" are terms that supplement the terms of this
346 | License by making exceptions from one or more of its conditions.
347 | Additional permissions that are applicable to the entire Program shall
348 | be treated as though they were included in this License, to the extent
349 | that they are valid under applicable law.  If additional permissions
350 | apply only to part of the Program, that part may be used separately
351 | under those permissions, but the entire Program remains governed by
352 | this License without regard to the additional permissions.
353 | 
354 |   When you convey a copy of a covered work, you may at your option
355 | remove any additional permissions from that copy, or from any part of
356 | it.  (Additional permissions may be written to require their own
357 | removal in certain cases when you modify the work.)  You may place
358 | additional permissions on material, added by you to a covered work,
359 | for which you have or can give appropriate copyright permission.
360 | 
361 |   Notwithstanding any other provision of this License, for material you
362 | add to a covered work, you may (if authorized by the copyright holders of
363 | that material) supplement the terms of this License with terms:
364 | 
365 |     a) Disclaiming warranty or limiting liability differently from the
366 |     terms of sections 15 and 16 of this License; or
367 | 
368 |     b) Requiring preservation of specified reasonable legal notices or
369 |     author attributions in that material or in the Appropriate Legal
370 |     Notices displayed by works containing it; or
371 | 
372 |     c) Prohibiting misrepresentation of the origin of that material, or
373 |     requiring that modified versions of such material be marked in
374 |     reasonable ways as different from the original version; or
375 | 
376 |     d) Limiting the use for publicity purposes of names of licensors or
377 |     authors of the material; or
378 | 
379 |     e) Declining to grant rights under trademark law for use of some
380 |     trade names, trademarks, or service marks; or
381 | 
382 |     f) Requiring indemnification of licensors and authors of that
383 |     material by anyone who conveys the material (or modified versions of
384 |     it) with contractual assumptions of liability to the recipient, for
385 |     any liability that these contractual assumptions directly impose on
386 |     those licensors and authors.
387 | 
388 |   All other non-permissive additional terms are considered "further
389 | restrictions" within the meaning of section 10.  If the Program as you
390 | received it, or any part of it, contains a notice stating that it is
391 | governed by this License along with a term that is a further
392 | restriction, you may remove that term.  If a license document contains
393 | a further restriction but permits relicensing or conveying under this
394 | License, you may add to a covered work material governed by the terms
395 | of that license document, provided that the further restriction does
396 | not survive such relicensing or conveying.
397 | 
398 |   If you add terms to a covered work in accord with this section, you
399 | must place, in the relevant source files, a statement of the
400 | additional terms that apply to those files, or a notice indicating
401 | where to find the applicable terms.
402 | 
403 |   Additional terms, permissive or non-permissive, may be stated in the
404 | form of a separately written license, or stated as exceptions;
405 | the above requirements apply either way.
406 | 
407 |   8. Termination.
408 | 
409 |   You may not propagate or modify a covered work except as expressly
410 | provided under this License.  Any attempt otherwise to propagate or
411 | modify it is void, and will automatically terminate your rights under
412 | this License (including any patent licenses granted under the third
413 | paragraph of section 11).
414 | 
415 |   However, if you cease all violation of this License, then your
416 | license from a particular copyright holder is reinstated (a)
417 | provisionally, unless and until the copyright holder explicitly and
418 | finally terminates your license, and (b) permanently, if the copyright
419 | holder fails to notify you of the violation by some reasonable means
420 | prior to 60 days after the cessation.
421 | 
422 |   Moreover, your license from a particular copyright holder is
423 | reinstated permanently if the copyright holder notifies you of the
424 | violation by some reasonable means, this is the first time you have
425 | received notice of violation of this License (for any work) from that
426 | copyright holder, and you cure the violation prior to 30 days after
427 | your receipt of the notice.
428 | 
429 |   Termination of your rights under this section does not terminate the
430 | licenses of parties who have received copies or rights from you under
431 | this License.  If your rights have been terminated and not permanently
432 | reinstated, you do not qualify to receive new licenses for the same
433 | material under section 10.
434 | 
435 |   9. Acceptance Not Required for Having Copies.
436 | 
437 |   You are not required to accept this License in order to receive or
438 | run a copy of the Program.  Ancillary propagation of a covered work
439 | occurring solely as a consequence of using peer-to-peer transmission
440 | to receive a copy likewise does not require acceptance.  However,
441 | nothing other than this License grants you permission to propagate or
442 | modify any covered work.  These actions infringe copyright if you do
443 | not accept this License.  Therefore, by modifying or propagating a
444 | covered work, you indicate your acceptance of this License to do so.
445 | 
446 |   10. Automatic Licensing of Downstream Recipients.
447 | 
448 |   Each time you convey a covered work, the recipient automatically
449 | receives a license from the original licensors, to run, modify and
450 | propagate that work, subject to this License.  You are not responsible
451 | for enforcing compliance by third parties with this License.
452 | 
453 |   An "entity transaction" is a transaction transferring control of an
454 | organization, or substantially all assets of one, or subdividing an
455 | organization, or merging organizations.  If propagation of a covered
456 | work results from an entity transaction, each party to that
457 | transaction who receives a copy of the work also receives whatever
458 | licenses to the work the party's predecessor in interest had or could
459 | give under the previous paragraph, plus a right to possession of the
460 | Corresponding Source of the work from the predecessor in interest, if
461 | the predecessor has it or can get it with reasonable efforts.
462 | 
463 |   You may not impose any further restrictions on the exercise of the
464 | rights granted or affirmed under this License.  For example, you may
465 | not impose a license fee, royalty, or other charge for exercise of
466 | rights granted under this License, and you may not initiate litigation
467 | (including a cross-claim or counterclaim in a lawsuit) alleging that
468 | any patent claim is infringed by making, using, selling, offering for
469 | sale, or importing the Program or any portion of it.
470 | 
471 |   11. Patents.
472 | 
473 |   A "contributor" is a copyright holder who authorizes use under this
474 | License of the Program or a work on which the Program is based.  The
475 | work thus licensed is called the contributor's "contributor version".
476 | 
477 |   A contributor's "essential patent claims" are all patent claims
478 | owned or controlled by the contributor, whether already acquired or
479 | hereafter acquired, that would be infringed by some manner, permitted
480 | by this License, of making, using, or selling its contributor version,
481 | but do not include claims that would be infringed only as a
482 | consequence of further modification of the contributor version.  For
483 | purposes of this definition, "control" includes the right to grant
484 | patent sublicenses in a manner consistent with the requirements of
485 | this License.
486 | 
487 |   Each contributor grants you a non-exclusive, worldwide, royalty-free
488 | patent license under the contributor's essential patent claims, to
489 | make, use, sell, offer for sale, import and otherwise run, modify and
490 | propagate the contents of its contributor version.
491 | 
492 |   In the following three paragraphs, a "patent license" is any express
493 | agreement or commitment, however denominated, not to enforce a patent
494 | (such as an express permission to practice a patent or covenant not to
495 | sue for patent infringement).  To "grant" such a patent license to a
496 | party means to make such an agreement or commitment not to enforce a
497 | patent against the party.
498 | 
499 |   If you convey a covered work, knowingly relying on a patent license,
500 | and the Corresponding Source of the work is not available for anyone
501 | to copy, free of charge and under the terms of this License, through a
502 | publicly available network server or other readily accessible means,
503 | then you must either (1) cause the Corresponding Source to be so
504 | available, or (2) arrange to deprive yourself of the benefit of the
505 | patent license for this particular work, or (3) arrange, in a manner
506 | consistent with the requirements of this License, to extend the patent
507 | license to downstream recipients.  "Knowingly relying" means you have
508 | actual knowledge that, but for the patent license, your conveying the
509 | covered work in a country, or your recipient's use of the covered work
510 | in a country, would infringe one or more identifiable patents in that
511 | country that you have reason to believe are valid.
512 | 
513 |   If, pursuant to or in connection with a single transaction or
514 | arrangement, you convey, or propagate by procuring conveyance of, a
515 | covered work, and grant a patent license to some of the parties
516 | receiving the covered work authorizing them to use, propagate, modify
517 | or convey a specific copy of the covered work, then the patent license
518 | you grant is automatically extended to all recipients of the covered
519 | work and works based on it.
520 | 
521 |   A patent license is "discriminatory" if it does not include within
522 | the scope of its coverage, prohibits the exercise of, or is
523 | conditioned on the non-exercise of one or more of the rights that are
524 | specifically granted under this License.  You may not convey a covered
525 | work if you are a party to an arrangement with a third party that is
526 | in the business of distributing software, under which you make payment
527 | to the third party based on the extent of your activity of conveying
528 | the work, and under which the third party grants, to any of the
529 | parties who would receive the covered work from you, a discriminatory
530 | patent license (a) in connection with copies of the covered work
531 | conveyed by you (or copies made from those copies), or (b) primarily
532 | for and in connection with specific products or compilations that
533 | contain the covered work, unless you entered into that arrangement,
534 | or that patent license was granted, prior to 28 March 2007.
535 | 
536 |   Nothing in this License shall be construed as excluding or limiting
537 | any implied license or other defenses to infringement that may
538 | otherwise be available to you under applicable patent law.
539 | 
540 |   12. No Surrender of Others' Freedom.
541 | 
542 |   If conditions are imposed on you (whether by court order, agreement or
543 | otherwise) that contradict the conditions of this License, they do not
544 | excuse you from the conditions of this License.  If you cannot convey a
545 | covered work so as to satisfy simultaneously your obligations under this
546 | License and any other pertinent obligations, then as a consequence you may
547 | not convey it at all.  For example, if you agree to terms that obligate you
548 | to collect a royalty for further conveying from those to whom you convey
549 | the Program, the only way you could satisfy both those terms and this
550 | License would be to refrain entirely from conveying the Program.
551 | 
552 |   13. Use with the GNU Affero General Public License.
553 | 
554 |   Notwithstanding any other provision of this License, you have
555 | permission to link or combine any covered work with a work licensed
556 | under version 3 of the GNU Affero General Public License into a single
557 | combined work, and to convey the resulting work.  The terms of this
558 | License will continue to apply to the part which is the covered work,
559 | but the special requirements of the GNU Affero General Public License,
560 | section 13, concerning interaction through a network will apply to the
561 | combination as such.
562 | 
563 |   14. Revised Versions of this License.
564 | 
565 |   The Free Software Foundation may publish revised and/or new versions of
566 | the GNU General Public License from time to time.  Such new versions will
567 | be similar in spirit to the present version, but may differ in detail to
568 | address new problems or concerns.
569 | 
570 |   Each version is given a distinguishing version number.  If the
571 | Program specifies that a certain numbered version of the GNU General
572 | Public License "or any later version" applies to it, you have the
573 | option of following the terms and conditions either of that numbered
574 | version or of any later version published by the Free Software
575 | Foundation.  If the Program does not specify a version number of the
576 | GNU General Public License, you may choose any version ever published
577 | by the Free Software Foundation.
578 | 
579 |   If the Program specifies that a proxy can decide which future
580 | versions of the GNU General Public License can be used, that proxy's
581 | public statement of acceptance of a version permanently authorizes you
582 | to choose that version for the Program.
583 | 
584 |   Later license versions may give you additional or different
585 | permissions.  However, no additional obligations are imposed on any
586 | author or copyright holder as a result of your choosing to follow a
587 | later version.
588 | 
589 |   15. Disclaimer of Warranty.
590 | 
591 |   THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
592 | APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
593 | HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
594 | OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
595 | THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
596 | PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
597 | IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
598 | ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
599 | 
600 |   16. Limitation of Liability.
601 | 
602 |   IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
603 | WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
604 | THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
605 | GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
606 | USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
607 | DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
608 | PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
609 | EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
610 | SUCH DAMAGES.
611 | 
612 |   17. Interpretation of Sections 15 and 16.
613 | 
614 |   If the disclaimer of warranty and limitation of liability provided
615 | above cannot be given local legal effect according to their terms,
616 | reviewing courts shall apply local law that most closely approximates
617 | an absolute waiver of all civil liability in connection with the
618 | Program, unless a warranty or assumption of liability accompanies a
619 | copy of the Program in return for a fee.
620 | 
621 |                      END OF TERMS AND CONDITIONS
622 | 
623 |             How to Apply These Terms to Your New Programs
624 | 
625 |   If you develop a new program, and you want it to be of the greatest
626 | possible use to the public, the best way to achieve this is to make it
627 | free software which everyone can redistribute and change under these terms.
628 | 
629 |   To do so, attach the following notices to the program.  It is safest
630 | to attach them to the start of each source file to most effectively
631 | state the exclusion of warranty; and each file should have at least
632 | the "copyright" line and a pointer to where the full notice is found.
633 | 
634 |     <one line to give the program's name and a brief idea of what it does.>
635 |     Copyright (C) <year>  <name of author>
636 | 
637 |     This program is free software: you can redistribute it and/or modify
638 |     it under the terms of the GNU General Public License as published by
639 |     the Free Software Foundation, either version 3 of the License, or
640 |     (at your option) any later version.
641 | 
642 |     This program is distributed in the hope that it will be useful,
643 |     but WITHOUT ANY WARRANTY; without even the implied warranty of
644 |     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
645 |     GNU General Public License for more details.
646 | 
647 |     You should have received a copy of the GNU General Public License
648 |     along with this program.  If not, see <https://www.gnu.org/licenses/>.
649 | 
650 | Also add information on how to contact you by electronic and paper mail.
651 | 
652 |   If the program does terminal interaction, make it output a short
653 | notice like this when it starts in an interactive mode:
654 | 
655 |     <program>  Copyright (C) <year>  <name of author>
656 |     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
657 |     This is free software, and you are welcome to redistribute it
658 |     under certain conditions; type `show c' for details.
659 | 
660 | The hypothetical commands `show w' and `show c' should show the appropriate
661 | parts of the General Public License.  Of course, your program's commands
662 | might be different; for a GUI interface, you would use an "about box".
663 | 
664 |   You should also get your employer (if you work as a programmer) or school,
665 | if any, to sign a "copyright disclaimer" for the program, if necessary.
666 | For more information on this, and how to apply and follow the GNU GPL, see
667 | <https://www.gnu.org/licenses/>.
668 | 
669 |   The GNU General Public License does not permit incorporating your program
670 | into proprietary programs.  If your program is a subroutine library, you
671 | may consider it more useful to permit linking proprietary applications with
672 | the library.  If this is what you want to do, use the GNU Lesser General
673 | Public License instead of this License.  But first, please read
674 | <https://www.gnu.org/licenses/why-not-lgpl.html>.
675 | 


--------------------------------------------------------------------------------
/README.md:
--------------------------------------------------------------------------------
 1 | # React + Vite
 2 | 
 3 | This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.
 4 | 
 5 | Currently, two official plugins are available:
 6 | 
 7 | - [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
 8 | - [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh
 9 | 
10 | ## Expanding the ESLint configuration
11 | 
12 | If you are developing a production application, we recommend using TypeScript and enable type-aware lint rules. Check out the [TS template](https://github.com/vitejs/vite/tree/main/packages/create-vite/template-react-ts) to integrate TypeScript and [`typescript-eslint`](https://typescript-eslint.io) in your project.
13 | 


--------------------------------------------------------------------------------
/bun.lockb:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/Lunakepio/mario-3D-controller/76e1eb9d4fc3f2f53d759daefac80df199c4ad45/bun.lockb


--------------------------------------------------------------------------------
/eslint.config.js:
--------------------------------------------------------------------------------
 1 | import js from '@eslint/js'
 2 | import globals from 'globals'
 3 | import reactHooks from 'eslint-plugin-react-hooks'
 4 | import reactRefresh from 'eslint-plugin-react-refresh'
 5 | 
 6 | export default [
 7 |   { ignores: ['dist'] },
 8 |   {
 9 |     files: ['**/*.{js,jsx}'],
10 |     languageOptions: {
11 |       ecmaVersion: 2020,
12 |       globals: globals.browser,
13 |       parserOptions: {
14 |         ecmaVersion: 'latest',
15 |         ecmaFeatures: { jsx: true },
16 |         sourceType: 'module',
17 |       },
18 |     },
19 |     plugins: {
20 |       'react-hooks': reactHooks,
21 |       'react-refresh': reactRefresh,
22 |     },
23 |     rules: {
24 |       ...js.configs.recommended.rules,
25 |       ...reactHooks.configs.recommended.rules,
26 |       'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],
27 |       'react-refresh/only-export-components': [
28 |         'warn',
29 |         { allowConstantExport: true },
30 |       ],
31 |     },
32 |   },
33 | ]
34 | 


--------------------------------------------------------------------------------
/index.html:
--------------------------------------------------------------------------------
 1 | <!doctype html>
 2 | <html lang="en">
 3 |   <head>
 4 |     <meta charset="UTF-8" />
 5 |     <link rel="icon" type="image/svg+xml" href="/vite.svg" />
 6 |     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
 7 |     <title>Vite + React</title>
 8 |   </head>
 9 |   <body>
10 |     <div id="root"></div>
11 |     <script type="module" src="/src/main.jsx"></script>
12 |   </body>
13 | </html>
14 | 


--------------------------------------------------------------------------------
/package.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "name": "mario-controller",
 3 |   "private": true,
 4 |   "version": "0.0.0",
 5 |   "type": "module",
 6 |   "scripts": {
 7 |     "dev": "vite --host",
 8 |     "build": "vite build",
 9 |     "lint": "eslint .",
10 |     "preview": "vite preview"
11 |   },
12 |   "dependencies": {
13 |     "@react-three/csg": "^4.0.0",
14 |     "@react-three/drei": "^10.0.6",
15 |     "@react-three/fiber": "^9.1.2",
16 |     "@react-three/postprocessing": "^3.0.4",
17 |     "@react-three/rapier": "^2.1.0",
18 |     "@three.ez/instanced-mesh": "^0.3.1",
19 |     "react": "^19.0.0",
20 |     "react-dom": "^19.0.0",
21 |     "react-joystick-component": "^6.2.1",
22 |     "three": "^0.175.0",
23 |     "three-custom-shader-material": "^6.3.1",
24 |     "zustand": "^5.0.3"
25 |   },
26 |   "devDependencies": {
27 |     "@eslint/js": "^9.21.0",
28 |     "@types/react": "^19.0.10",
29 |     "@types/react-dom": "^19.0.4",
30 |     "@vitejs/plugin-react-swc": "^3.8.0",
31 |     "eslint": "^9.21.0",
32 |     "eslint-plugin-react-hooks": "^5.1.0",
33 |     "eslint-plugin-react-refresh": "^0.4.19",
34 |     "globals": "^15.15.0",
35 |     "vite": "^6.2.0"
36 |   }
37 | }
38 | 


--------------------------------------------------------------------------------
/public/models/items/coin.glb:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/Lunakepio/mario-3D-controller/76e1eb9d4fc3f2f53d759daefac80df199c4ad45/public/models/items/coin.glb


--------------------------------------------------------------------------------
/public/models/npc/luma.glb:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/Lunakepio/mario-3D-controller/76e1eb9d4fc3f2f53d759daefac80df199c4ad45/public/models/npc/luma.glb


--------------------------------------------------------------------------------
/public/models/player/mario.glb:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/Lunakepio/mario-3D-controller/76e1eb9d4fc3f2f53d759daefac80df199c4ad45/public/models/player/mario.glb


--------------------------------------------------------------------------------
/public/textures/dust/dust.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/Lunakepio/mario-3D-controller/76e1eb9d4fc3f2f53d759daefac80df199c4ad45/public/textures/dust/dust.png


--------------------------------------------------------------------------------
/public/textures/luma/noiseColor.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/Lunakepio/mario-3D-controller/76e1eb9d4fc3f2f53d759daefac80df199c4ad45/public/textures/luma/noiseColor.png


--------------------------------------------------------------------------------
/public/textures/luma/noiseTex.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/Lunakepio/mario-3D-controller/76e1eb9d4fc3f2f53d759daefac80df199c4ad45/public/textures/luma/noiseTex.png


--------------------------------------------------------------------------------
/public/textures/luma/sparkles.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/Lunakepio/mario-3D-controller/76e1eb9d4fc3f2f53d759daefac80df199c4ad45/public/textures/luma/sparkles.png


--------------------------------------------------------------------------------
/public/textures/luma/stars.webp:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/Lunakepio/mario-3D-controller/76e1eb9d4fc3f2f53d759daefac80df199c4ad45/public/textures/luma/stars.webp


--------------------------------------------------------------------------------
/src/App.jsx:
--------------------------------------------------------------------------------
 1 | import React, { Suspense } from "react";
 2 | import { Canvas } from "@react-three/fiber";
 3 | import { PlayerController } from "./PlayerController";
 4 | import {
 5 |   OrbitControls,
 6 |   Environment,
 7 |   KeyboardControls,
 8 |   Stats,
 9 | } from "@react-three/drei";
10 | import { Physics, RigidBody } from "@react-three/rapier";
11 | import { Lighting } from "./Lighting";
12 | import { Dust } from "./particles/Dust";
13 | import { MobileControls } from "./mobile/MobileControls";
14 | import { Coins } from "./coins/Coins";
15 | import { Luma } from "./models/Luma/Luma";
16 | import { Composer } from "./Composer";
17 | 
18 | function App() {
19 |   const controls = [
20 |     { name: "forward", keys: ["ArrowUp", "KeyW"] },
21 |     { name: "back", keys: ["ArrowDown", "KeyS"] },
22 |     { name: "left", keys: ["ArrowLeft", "KeyA"] },
23 |     { name: "right", keys: ["ArrowRight", "KeyD"] },
24 |     { name: "jump", keys: ["Space"] },
25 |   ];
26 | 
27 |   return (
28 |     <>
29 |       <div className="canvas-container">
30 |         <MobileControls />
31 |         <Canvas shadows>
32 |           <color attach="background" args={["#FF5E41"]} />
33 |           <Suspense fallback={"loading..."}>
34 |             {/* <Composer/> */}
35 |             <Lighting/>
36 |             <Dust/>
37 |             <Luma />
38 |             <Physics timeStep={"vary"} gravity={[0, -9.81, 0]}>
39 |             {/* <Coins/> */}
40 |               <KeyboardControls map={controls}>
41 |                 <PlayerController />
42 |               </KeyboardControls>
43 |               <RigidBody type="fixed" name="ground" userData={{ ground : true}}>
44 |                 <mesh castShadow receiveShadow position={[0, -2, 0]} rotation={[-Math.PI / 2, 0, 0]}>
45 |                   <planeGeometry args={[50, 50]} />
46 |                   <meshStandardMaterial color={"#FF0000"} />
47 |                 </mesh>
48 |               </RigidBody>
49 |             </Physics>
50 |           </Suspense>
51 |           <Stats/>
52 |           {/* <OrbitControls /> */}
53 |           <Environment preset="warehouse"/>
54 |         </Canvas>
55 |       </div>
56 |     </>
57 |   );
58 | }
59 | 
60 | export default App;
61 | 


--------------------------------------------------------------------------------
/src/Composer.jsx:
--------------------------------------------------------------------------------
 1 | import { Bloom, EffectComposer } from "@react-three/postprocessing";
 2 | 
 3 | export const Composer = () => {
 4 |   return (
 5 |     <EffectComposer>
 6 |       <Bloom
 7 |         intensity={0.5}
 8 |         luminanceThreshold={1}
 9 |         luminanceSmoothing={0.9}
10 |         mipMapBlur={true}
11 |       />
12 |     </EffectComposer>
13 |   );
14 | };
15 | 


--------------------------------------------------------------------------------
/src/Lighting.jsx:
--------------------------------------------------------------------------------
 1 | import { useFrame } from "@react-three/fiber";
 2 | import { useGameStore } from "./store/store";
 3 | import { DirectionalLight, CameraHelper } from "three";
 4 | import { useRef } from "react";
 5 | import { Helper } from "@react-three/drei";
 6 | 
 7 | export const Lighting = () => {
 8 | 
 9 | 
10 |   const directionalLight = useRef(null);
11 | 
12 |   useFrame(() => {
13 |     const playerPosition = useGameStore.getState().playerPosition;
14 |     if (!playerPosition && !directionalLight.current) return;
15 | 
16 |     if(playerPosition){
17 |     directionalLight.current.position.x = playerPosition.x - 1;
18 |     directionalLight.current.target.position.x = playerPosition.x;
19 | 
20 |     directionalLight.current.position.y = playerPosition.y + 5;
21 |     directionalLight.current.target.position.y = playerPosition.y;
22 | 
23 |     directionalLight.current.position.z = playerPosition.z - 3;
24 |     directionalLight.current.target.position.z = playerPosition.z;
25 | 
26 |     directionalLight.current.target.updateMatrixWorld();
27 |     }
28 |   });
29 | 
30 |   return (
31 |     <>
32 |       <directionalLight
33 |       castShadow
34 |       ref={directionalLight}
35 |       position={[0, 0, 0]}
36 |       intensity={5}
37 |       color={"#add8e6"}
38 |       // shadow-normalBias={0.04}
39 |       shadow-bias={-0.001}
40 |       shadow-mapSize={[512, 512]}
41 |       // layers={1}
42 |       
43 |     >
44 |       <orthographicCamera
45 |         attach="shadow-camera"
46 |         near={1}
47 |         far={10}
48 |         top={10}
49 |         right={10}
50 |         left={-10}
51 |         bottom={-10}
52 |       >
53 |         {/* <Helper type={CameraHelper} /> */}
54 |       </orthographicCamera>
55 |     </directionalLight>
56 |     </>
57 |   );
58 | };
59 | 


--------------------------------------------------------------------------------
/src/PlayerController.jsx:
--------------------------------------------------------------------------------
  1 | import { useFrame } from "@react-three/fiber";
  2 | import { useRef } from "react";
  3 | import { Mario } from "./models/Mario";
  4 | import { CapsuleCollider, RigidBody, useRapier } from "@react-three/rapier";
  5 | import { useKeyboardControls } from "@react-three/drei";
  6 | import { MathUtils, Vector3 } from "three";
  7 | import { useGameStore } from "./store/store";
  8 | import { maxSpeed } from "./constants";
  9 | 
 10 | export const PlayerController = () => {
 11 |   const playerRef = useRef();
 12 |   const rbRef = useRef();
 13 | 
 14 |   const cameraPositionRef = useRef();
 15 |   const lookAtPositionRef = useRef();
 16 |   const speedRef = useRef(0);
 17 | 
 18 |   const setPlayerAnimation = useGameStore((state) => state.setPlayerAnimation);
 19 |   const setPlayerPosition = useGameStore((state) => state.setPlayerPosition);
 20 |   const [, get] = useKeyboardControls();
 21 |   const { lerp } = MathUtils;
 22 | 
 23 |   let isJumpHeld = false;
 24 |   let landingDuration = 0.4;
 25 | 
 26 |   const { world, rapier } = useRapier();
 27 | 
 28 |   const ground = useRef(null);
 29 |   const hasJustLanded = useRef(false);
 30 | 
 31 |   
 32 |   useFrame((state, delta) => {
 33 |     if (
 34 |       !playerRef.current ||
 35 |       !rbRef.current ||
 36 |       !cameraPositionRef.current ||
 37 |       !lookAtPositionRef.current
 38 |     )
 39 |       return;
 40 | 
 41 |     const camera = state.camera;
 42 |     const joystick = useGameStore.getState().joystick;
 43 |     const jumpButtonPressed = useGameStore.getState().jumpButtonPressed;
 44 |     const lookAtCharacter = useGameStore.getState().lookAtCharacter;
 45 |     const { forward, back, left, right, jump } = get();
 46 | 
 47 | 
 48 |     const backwardJoystick = joystick.y < 0 ? -joystick.y : 0;
 49 |     const joystickInfluence = joystick.x * (1 + backwardJoystick);
 50 | 
 51 |     playerRef.current.rotation.y = lerp(
 52 |       playerRef.current.rotation.y,
 53 |       playerRef.current.rotation.y - joystickInfluence  + Number(left) - Number(right) ,
 54 |       3 * delta
 55 |     );
 56 | 
 57 |     const playerRotation = playerRef.current.rotation.y;
 58 | 
 59 |     const forwardDirection = new Vector3(
 60 |       Math.sin(playerRotation),
 61 |       0,
 62 |       Math.cos(playerRotation)
 63 |     );
 64 | 
 65 |     if(ground.current){
 66 |       const joystickSpeed = (joystick.distance / 100) * maxSpeed;
 67 |       speedRef.current = lerp(speedRef.current, forward ? maxSpeed : joystickSpeed  ? joystickSpeed : 0, 4 * delta);
 68 |     
 69 |     }
 70 | 
 71 |     if (rbRef.current.linvel().y > 2 && !ground.current) {
 72 |       setPlayerAnimation("jump");
 73 |     } else if (rbRef.current.linvel().y < 2 && !ground.current) {
 74 |       setPlayerAnimation("jump");
 75 |       rbRef.current.setGravityScale(2.1);
 76 |     } else if (hasJustLanded.current) {
 77 |       setPlayerAnimation("land");
 78 |       landingDuration -= delta;
 79 |     } else {
 80 |       if(ground.current){
 81 |         setPlayerAnimation(
 82 |           speedRef.current > 2 ? "run" :
 83 |           speedRef.current > 0.1 ? "walk" : "idle"
 84 |         );
 85 |         rbRef.current.setGravityScale(1.2);
 86 | 
 87 |       }
 88 |     }
 89 |     
 90 | 
 91 |     const ray = new rapier.Ray(rbRef.current.translation(), {
 92 |       x: 0,
 93 |       y: -2,
 94 |       z: 0,
 95 |     });
 96 | 
 97 |     const raycastResult = world.castRayAndGetNormal(
 98 |       ray,
 99 |       1,
100 |       false,
101 |       undefined,
102 |       undefined,
103 |       undefined,
104 |       rbRef.current.translation()
105 |     );
106 | 
107 | 
108 |     if (raycastResult) {
109 |       const collider = raycastResult.collider;
110 | 
111 |       const userData = collider.parent()?.userData;
112 |       const wasGrounded = ground.current;
113 |       ground.current = Boolean(userData);
114 |       
115 |       if (!wasGrounded && ground.current) {
116 |         hasJustLanded.current = true;
117 |         landingDuration = 0.4;
118 |       }
119 |       
120 |       if (hasJustLanded.current) {
121 |         landingDuration -= delta;
122 |         if (landingDuration <= 0) {
123 |           hasJustLanded.current = false;
124 |         }
125 |       }
126 |       
127 |     }
128 |     rbRef.current.setLinvel({
129 |       x: forwardDirection.x * speedRef.current,
130 |       y: rbRef.current.linvel().y,
131 |       z: forwardDirection.z * speedRef.current,
132 |     });
133 | 
134 |     if ((jump || jumpButtonPressed) && !isJumpHeld && ground.current) {
135 |       rbRef.current.applyImpulse({ x: 0, y: 7, z: 0 }, true);
136 |       isJumpHeld = true;
137 |     }
138 | 
139 |     if (!jump && !jumpButtonPressed) {
140 |       isJumpHeld = false;
141 |     }
142 | 
143 |     rbRef.current.setEnabledRotations(false, false, false, true);
144 | 
145 |     camera.position.lerp(
146 |       cameraPositionRef.current.getWorldPosition(new Vector3()),
147 |       2 * delta
148 |     );
149 |     
150 |     camera.lookAt(lookAtPositionRef.current.getWorldPosition(new Vector3()));
151 |     setPlayerPosition(rbRef.current.translation());
152 | 
153 |   });
154 | 
155 |   return (
156 |     <RigidBody ccd canSleep={false} colliders={false} ref={rbRef}>
157 |       <CapsuleCollider args={[0.3, 0.5]} />
158 |       <group ref={playerRef}>
159 |         <group ref={cameraPositionRef} position={[0, 2, -6]} />
160 |         <group ref={lookAtPositionRef} />
161 |         <Mario speedRef={speedRef} />
162 |       </group>
163 |     </RigidBody>
164 |   );
165 | };
166 | 


--------------------------------------------------------------------------------
/src/coins/Coins.jsx:
--------------------------------------------------------------------------------
 1 | import { InstancedRigidBodies } from "@react-three/rapier";
 2 | import { MathUtils } from "three";
 3 | import { useGLTF } from "@react-three/drei";
 4 | import { useEffect, useRef } from "react";
 5 | import { InstancedMesh2 } from "@three.ez/instanced-mesh";
 6 | import { extend } from "@react-three/fiber";
 7 | extend({ InstancedMesh2 });
 8 | 
 9 | export const Coins = ({ count = 1000, rand = MathUtils.randFloatSpread }) => {
10 |   const { nodes, materials } = useGLTF("/models/items/coin.glb");
11 |   const ref = useRef(null);
12 |   const instancedMeshRef = useRef(null);
13 |   const instances = Array.from({ length: count }, (_, i) => ({
14 |     key: i,
15 |     position: [rand(10), 10 + i / 2, rand(10)],
16 |     rotation: [Math.random(), Math.random(), Math.random()],
17 |   }));
18 | 
19 |   useEffect(() => {
20 |     if (instancedMeshRef.current) {
21 |       instancedMeshRef.current.addInstances(count, (obj) => {
22 |         obj.position.y = 20;
23 | 
24 |       });
25 |     }
26 |   }, [count]);
27 |   materials.CoinMat00.roughness = 0.2;
28 |   materials.CoinMat00.metalness = 0.8;
29 |   return (
30 |     <InstancedRigidBodies
31 |       ref={ref}
32 |       instances={instances}
33 |       colliders="hull"
34 |       userData={{ ground: true }}
35 |     >
36 |       <instancedMesh2
37 |         ref={instancedMeshRef}
38 |         frustumCulled={false}
39 |         receiveShadow
40 |         castShadow
41 |         args={[
42 |           nodes.Coin__CoinMat00.geometry,
43 |           materials.CoinMat00,
44 |           { createEntities: true },
45 |         ]}
46 |         dispose={null}
47 |       />
48 |     </InstancedRigidBodies>
49 |   );
50 | };
51 | 


--------------------------------------------------------------------------------
/src/constants.js:
--------------------------------------------------------------------------------
1 | export const maxSpeed = 7;
2 | 


--------------------------------------------------------------------------------
/src/hooks/useTouchScreen.js:
--------------------------------------------------------------------------------
 1 | import { useState, useEffect } from 'react';
 2 | 
 3 | export const useTouchScreen = () => {
 4 |   const [isTouchScreen, setIsTouchScreen] = useState(false);
 5 | 
 6 |   useEffect(() => {
 7 |     const checkTouchScreen = () => {
 8 |       const isTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
 9 |       setIsTouchScreen(isTouch);
10 |     };
11 | 
12 |     checkTouchScreen();
13 | 
14 |     window.addEventListener('resize', checkTouchScreen);
15 | 
16 |     return () => {
17 |       window.removeEventListener('resize', checkTouchScreen);
18 |     };
19 |   }, []);
20 | 
21 |   return isTouchScreen;
22 | };
23 | 
24 | 


--------------------------------------------------------------------------------
/src/index.css:
--------------------------------------------------------------------------------
  1 | @import url("https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&family=Orbitron:wght@400..900&family=Oswald:wght@200..700&display=swap");
  2 | 
  3 | * {
  4 |   margin: 0;
  5 |   padding: 0;
  6 |   box-sizing: border-box;
  7 |   font-family: "Oswald", sans-serif;
  8 |   font-optical-sizing: auto;
  9 |   font-style: normal;
 10 |   user-select: none;
 11 | }
 12 | 
 13 | .canvas-container {
 14 |   display: flex;
 15 |   justify-content: center;
 16 |   align-items: center;
 17 |   height: 100dvh;
 18 |   width: 100dvw;
 19 | }
 20 | 
 21 | .mobile-controls {
 22 |   position: fixed;
 23 |   top: 0;
 24 |   left: 0;
 25 |   z-index: 2;
 26 |   display: flex;
 27 |   justify-content: center;
 28 |   align-items: center;
 29 |   height: 100dvh;
 30 |   width: 100dvw;
 31 |   .bottom-left {
 32 |     position: absolute;
 33 |     left: 5%;
 34 |     bottom: 5%;
 35 |   }
 36 |   .bottom-right {
 37 |     position: absolute;
 38 |     right: 5%;
 39 |     bottom: 5%;
 40 |   }
 41 | 
 42 |   .bottom-right button {
 43 |     all: unset;
 44 |     position: relative;
 45 |     width: 100px;
 46 |     height: 100px;
 47 |     background: radial-gradient(circle at 30% 30%, #58db84, #37995c);
 48 |     color: #37995c;
 49 |     font-weight: bold;
 50 |     font-size: 48px;
 51 |     border-radius: 50%;
 52 |     display: flex;
 53 |     justify-content: center;
 54 |     align-items: center;
 55 |     box-shadow: 0 6px 0 #1f4c32, 0 4px 15px rgba(0, 0, 0, 0.3);
 56 |     transition: all 0.15s ease;
 57 |     touch-action: manipulation;
 58 |     user-select: none;
 59 |     overflow: hidden;
 60 |   }
 61 | 
 62 |   .bottom-right button::before {
 63 |     content: "";
 64 |     position: absolute;
 65 |     top: 0;
 66 |     left: 0;
 67 |     width: 100%;
 68 |     height: 100%;
 69 |     border-radius: 50%;
 70 |     background: linear-gradient(
 71 |       135deg,
 72 |       rgba(255, 255, 255, 0.6) 0%,
 73 |       rgba(255, 255, 255, 0.15) 40%,
 74 |       transparent 60%
 75 |     );
 76 |     pointer-events: none;
 77 |     transform: rotate(-20deg);
 78 |     z-index: 3;
 79 |   }
 80 | 
 81 |   .bottom-right button:active {
 82 |     transform: translateY(4px);
 83 |     box-shadow: 0 2px 0 #1f4c32, 0 2px 6px rgba(0, 0, 0, 0.3);
 84 |     background: radial-gradient(circle at 30% 30%, #4fd176, #2e7a4d);
 85 |   }
 86 | }
 87 | 
 88 | .pressed{
 89 |   transform: translateY(4px);
 90 |   box-shadow: 0 2px 0 #1f4c32, 0 2px 6px rgba(0, 0, 0, 0.3);
 91 |   background: radial-gradient(circle at 30% 30%, #4fd176, #2e7a4d);
 92 | }
 93 | 
 94 | 
 95 | .joystick-base {
 96 |   position: relative;
 97 |   border-radius: 50%;
 98 |   background: radial-gradient(circle at center, #c7c7c7 60%, #aaaaaa 100%);
 99 |   box-shadow: inset 0 4px 6px rgba(0, 0, 0, 0.2),
100 |               inset 0 -2px 4px rgba(255, 255, 255, 0.2);
101 |   touch-action: none;
102 | }
103 | 
104 | .joystick-knob {
105 |   position: absolute;
106 |   top: 50%;
107 |   left: 50%;
108 |   width: 40%;
109 |   height: 40%;
110 |   transform: translate(-50%, -50%);
111 |   border-radius: 50%;
112 |   background: radial-gradient(circle at 30% 30%, #ddd, #999);
113 |   background-image: repeating-radial-gradient(
114 |     circle at center,
115 |     rgba(255, 255, 255, 0.3) 0px,
116 |     rgba(255, 255, 255, 0.1) 3px,
117 |     transparent 6px
118 |   );
119 |   box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
120 |   border: 2px solid #666;
121 |   pointer-events: none;
122 |   transition: transform 0.05s linear;
123 | }
124 | 


--------------------------------------------------------------------------------
/src/main.jsx:
--------------------------------------------------------------------------------
 1 | import { StrictMode } from 'react'
 2 | import { createRoot } from 'react-dom/client'
 3 | import './index.css'
 4 | import App from './App.jsx'
 5 | 
 6 | createRoot(document.getElementById('root')).render(
 7 |   <StrictMode>
 8 |     <App />
 9 |   </StrictMode>,
10 | )
11 | 


--------------------------------------------------------------------------------
/src/mobile/Buttons.jsx:
--------------------------------------------------------------------------------
 1 | import { useGameStore } from "../store/store";
 2 | import { useRef } from "react";
 3 | 
 4 | export const Buttons = () => {
 5 |   const setJumpButtonPressed = useGameStore((state) => state.setJumpButtonPressed);
 6 |   const buttonRef = useRef(null);
 7 | 
 8 |   const handleStart = (e) => {
 9 |     e.preventDefault(); 
10 |     setJumpButtonPressed(true);
11 |     buttonRef.current?.classList.add("pressed");
12 |   };
13 | 
14 |   const handleEnd = () => {
15 |     setJumpButtonPressed(false);
16 |     buttonRef.current?.classList.remove("pressed");
17 |   };
18 | 
19 |   return (
20 |     <div className="bottom-right">
21 |       <button
22 |         ref={buttonRef}
23 |         onTouchStart={handleStart}
24 |         onTouchEnd={handleEnd}
25 |         onMouseDown={handleStart}
26 |         onMouseUp={handleEnd}
27 |         className="touch-button"
28 |       >
29 |         A
30 |       </button>
31 |     </div>
32 |   );
33 | };
34 | 


--------------------------------------------------------------------------------
/src/mobile/JoystickComponent.jsx:
--------------------------------------------------------------------------------
 1 | import { Joystick } from "./react-joystick-component/src";
 2 | import { useGameStore } from "../store/store";
 3 | 
 4 | export const JoystickComponent = () => {
 5 |   const setJoystick = useGameStore((state) => state.setJoystick);
 6 | 
 7 |   const handleMove = (e) => {
 8 |     setJoystick(e);
 9 |   };
10 | 
11 |   const handleStop = (e) => {
12 |     setJoystick(e);
13 |   };
14 | 
15 | 
16 |   return (
17 |     <div className="bottom-left">
18 |       <Joystick
19 |         size={104}
20 |         sticky={false}
21 |         baseColor="rgb(215, 215, 215)"
22 |         stickColor="rgb(255, 255, 255)"
23 |         move={handleMove}
24 |         stop={handleStop}
25 |       ></Joystick>
26 |      
27 |     </div>
28 |   );
29 | };
30 | 


--------------------------------------------------------------------------------
/src/mobile/MobileControls.jsx:
--------------------------------------------------------------------------------
 1 | import { Buttons } from "./Buttons"
 2 | import { JoystickComponent } from "./JoystickComponent"
 3 | import { useTouchScreen } from "../hooks/useTouchScreen";
 4 | 
 5 | export const MobileControls = () => {
 6 | 
 7 |   const isTouchScreen = useTouchScreen();
 8 | 
 9 |   if(!isTouchScreen) return null;
10 |   return(
11 |     <div className="mobile-controls">
12 |       <JoystickComponent />
13 |       <Buttons/>
14 |     </div>
15 |   )
16 | }
17 | 


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/LICENSE:
--------------------------------------------------------------------------------
 1 | MIT License
 2 | 
 3 | Copyright (c) 2019 Jack
 4 | 
 5 | Permission is hereby granted, free of charge, to any person obtaining a copy
 6 | of this software and associated documentation files (the "Software"), to deal
 7 | in the Software without restriction, including without limitation the rights
 8 | to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 9 | copies of the Software, and to permit persons to whom the Software is
10 | furnished to do so, subject to the following conditions:
11 | 
12 | The above copyright notice and this permission notice shall be included in all
13 | copies or substantial portions of the Software.
14 | 
15 | THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
16 | IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
17 | FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
18 | AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
19 | LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
20 | OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
21 | SOFTWARE.
22 | 


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/README.md:
--------------------------------------------------------------------------------
 1 | ## React Joystick Component
 2 | 
 3 | [![Bundle Size](https://img.shields.io/bundlephobia/minzip/react-joystick-component?style=plastic)](https://img.shields.io/bundlephobia/minzip/react-joystick-component?style=plastic)
 4 | 
 5 | [Click here to see examples](https://elmarti.github.io/react-joystick-component/)
 6 | 
 7 | 
 8 | ```
 9 | npm i react-joystick-component --save
10 | yarn add react-joystick-component
11 | ```
12 | 
13 | ```
14 | import { Joystick } from 'react-joystick-component';
15 | ```
16 | 
17 | 
18 | ```React
19 | <Joystick size={100} sticky={true} baseColor="red" stickColor="blue" move={handleMove} stop={handleStop}></Joystick>
20 | ```
21 | 
22 | Component Props - as described by IJoystickProps - all are optional
23 | 
24 | | Prop  | Type  | Description  |
25 | |---|---|---|
26 | | size  |  number |  The size in px of the Joystick base  |
27 | | stickSize  |  number |  The size in px of the Joystick stick (if unspecified, joystick size is relative to the `size` value |
28 | |  baseColor |  string |  The color of the Joystick base |
29 | | stickColor  |  string |  The color of the Stick |
30 | |  throttle | number  |  The [throttling](https://codeburst.io/throttling-and-debouncing-in-javascript-b01cad5c8edf) rate of the move callback |
31 | | sticky | Boolean | Should the joystick stay where it is when the interaction ends |
32 | | stickImage | string | The image to be shown for the joystick |
33 | | baseImage | string | The image to be shown for the pad |
34 | | followCursor | Boolean | Make the stick follow the cursor position |
35 | |  move | Function  | Callback fired on every mouse move, not throttled unless a throttling rate is provided as above  |
36 | |  stop | Function  | Callback fired when the user releases the joystick  |
37 | | start  |  Function | Callback fired when the user starts moving the Joystick  |
38 | | disabled | Boolean | When true, block any usage of the Joystick. This will also apply the `joystick-disabled` and `joystick-base-disabled` classNames  |
39 | | stickShape | JoystickShape | The shape of the joystick default = circle|
40 | | baseShape | JoystickShape | The shape of the joystick default = circle|
41 | | controlPlaneShape | JoystickShape | Override the default shape behaviour of the control plane - circle, square, axisX, axisY|
42 | | minDistance | number | Percentage 0-100 - the minimum distance to start receive IJoystickMove events|
43 | | pos | {x: number, y: number}| Override the joystick position (doesn't work if the user is interacting. You can use `disabled` to force this)|
44 | ```TypeScript
45 | import {JoystickShape} from "./shape.enum"; 
46 | interface IJoystickProps {
47 |     size?: number;
48 |     stickSize?: number;
49 |     baseColor?: string;
50 |     stickColor?: string;
51 |     disabled?: boolean;
52 |     throttle?: number;
53 |     sticky?: boolean;
54 |     stickImage?: string;
55 |     baseImage?: string;
56 |     followCursor?: boolean;
57 |     move?: (event: IJoystickUpdateEvent) => void;
58 |     stop?: (event: IJoystickUpdateEvent) => void;
59 |     start?: (event: IJoystickUpdateEvent) => void;
60 |     baseShape?: JoystickShape;
61 |     stickShape?: JoystickShape;
62 |     controlPlaneShape?: JoystickShape;
63 |     minDistance?: number;
64 |     pos: {x: number, y: number}
65 | }
66 | ```
67 | 
68 | ```TypeScript
69 | type JoystickDirection = "FORWARD" | "RIGHT" | "LEFT" | "BACKWARD";
70 | 
71 | export interface IJoystickUpdateEvent {
72 |     type: "move" | "stop" | "start";
73 |     x: number | null;
74 |     y: number | null;
75 |     direction: JoystickDirection | null;
76 |     distance: number; // Percentile 0-100% of joystick 
77 | }
78 | ```
79 | 


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/build/lib/Joystick.d.ts:
--------------------------------------------------------------------------------
  1 | import * as React from 'react';
  2 | import { JoystickShape } from "./enums/shape.enum";
  3 | export interface IJoystickProps {
  4 |     size?: number;
  5 |     stickSize?: number;
  6 |     baseColor?: string;
  7 |     stickColor?: string;
  8 |     throttle?: number;
  9 |     disabled?: boolean;
 10 |     sticky?: boolean;
 11 |     move?: (event: IJoystickUpdateEvent) => void;
 12 |     stop?: (event: IJoystickUpdateEvent) => void;
 13 |     start?: (event: IJoystickUpdateEvent) => void;
 14 |     stickImage?: string;
 15 |     baseImage?: string;
 16 |     followCursor?: boolean;
 17 |     baseShape?: JoystickShape;
 18 |     stickShape?: JoystickShape;
 19 |     controlPlaneShape?: JoystickShape;
 20 |     minDistance?: number;
 21 |     pos?: {
 22 |         x: number;
 23 |         y: number;
 24 |     };
 25 | }
 26 | export interface IJoystickUpdateEvent {
 27 |     type: "move" | "stop" | "start";
 28 |     x: number | null;
 29 |     y: number | null;
 30 |     direction: JoystickDirection | null;
 31 |     distance: number | null;
 32 | }
 33 | export interface IJoystickState {
 34 |     dragging: boolean;
 35 |     coordinates?: IJoystickCoordinates;
 36 | }
 37 | declare type JoystickDirection = "FORWARD" | "RIGHT" | "LEFT" | "BACKWARD";
 38 | export interface IJoystickCoordinates {
 39 |     relativeX: number;
 40 |     relativeY: number;
 41 |     axisX: number;
 42 |     axisY: number;
 43 |     direction: JoystickDirection;
 44 |     distance: number;
 45 | }
 46 | declare class Joystick extends React.Component<IJoystickProps, IJoystickState> {
 47 |     private readonly _stickRef;
 48 |     private readonly _baseRef;
 49 |     private readonly _throttleMoveCallback;
 50 |     private _baseSize;
 51 |     private _stickSize?;
 52 |     private frameId;
 53 |     private _radius;
 54 |     private _parentRect;
 55 |     private _pointerId;
 56 |     private _mounted;
 57 |     constructor(props: IJoystickProps);
 58 |     componentWillUnmount(): void;
 59 |     componentDidMount(): void;
 60 |     /**
 61 |      * Update position of joystick - set state and trigger DOM manipulation
 62 |      * @param coordinates
 63 |      * @private
 64 |      */
 65 |     private _updatePos;
 66 |     /**
 67 |      * Handle pointerdown event
 68 |      * @param e PointerEvent
 69 |      * @private
 70 |      */
 71 |     private _pointerDown;
 72 |     /**
 73 |      * Use ArcTan2 (4 Quadrant inverse tangent) to identify the direction the joystick is pointing
 74 |      * https://docs.oracle.com/cd/B12037_01/olap.101/b10339/x_arcsin003.htm
 75 |      * @param atan2: number
 76 |      * @private
 77 |      */
 78 |     private _getDirection;
 79 |     /**
 80 |      * Hypotenuse distance calculation
 81 |      * @param x: number
 82 |      * @param y: number
 83 |      * @private
 84 |      */
 85 |     private _distance;
 86 |     private _distanceToPercentile;
 87 |     /**
 88 |      * Calculate X/Y and ArcTan within the bounds of the joystick
 89 |      * @param event
 90 |      * @private
 91 |      */
 92 |     private _pointerMove;
 93 |     /**
 94 |      * Handle pointer up and de-register listen events
 95 |      * @private
 96 |      */
 97 |     private _pointerUp;
 98 |     /**
 99 |      * Get the shape stylings for the base
100 |      * @private
101 |      */
102 |     private getBaseShapeStyle;
103 |     /**
104 |      * Get the shape stylings for the stick
105 |      * @private
106 |      */
107 |     private getStickShapeStyle;
108 |     /**
109 |      * Calculate base styles for pad
110 |      * @private
111 |      */
112 |     private _getBaseStyle;
113 |     /**
114 |      * Calculate  base styles for joystick and translate
115 |      * @private
116 |      */
117 |     private _getStickStyle;
118 |     render(): JSX.Element;
119 | }
120 | export { Joystick };
121 | 


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/build/lib/Joystick.js:
--------------------------------------------------------------------------------
  1 | "use strict";
  2 | var __extends = (this && this.__extends) || (function () {
  3 |     var extendStatics = function (d, b) {
  4 |         extendStatics = Object.setPrototypeOf ||
  5 |             ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
  6 |             function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
  7 |         return extendStatics(d, b);
  8 |     };
  9 |     return function (d, b) {
 10 |         if (typeof b !== "function" && b !== null)
 11 |             throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
 12 |         extendStatics(d, b);
 13 |         function __() { this.constructor = d; }
 14 |         d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
 15 |     };
 16 | })();
 17 | var __assign = (this && this.__assign) || function () {
 18 |     __assign = Object.assign || function(t) {
 19 |         for (var s, i = 1, n = arguments.length; i < n; i++) {
 20 |             s = arguments[i];
 21 |             for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
 22 |                 t[p] = s[p];
 23 |         }
 24 |         return t;
 25 |     };
 26 |     return __assign.apply(this, arguments);
 27 | };
 28 | Object.defineProperty(exports, "__esModule", { value: true });
 29 | exports.Joystick = void 0;
 30 | var React = require("react");
 31 | var shape_enum_1 = require("./enums/shape.enum");
 32 | var shape_factory_1 = require("./shapes/shape.factory");
 33 | var shape_bounds_factory_1 = require("./shapes/shape.bounds.factory");
 34 | var InteractionEvents;
 35 | (function (InteractionEvents) {
 36 |     InteractionEvents["PointerDown"] = "pointerdown";
 37 |     InteractionEvents["PointerMove"] = "pointermove";
 38 |     InteractionEvents["PointerUp"] = "pointerup";
 39 | })(InteractionEvents || (InteractionEvents = {}));
 40 | /**
 41 |  * Radians identifying the direction of the joystick
 42 |  */
 43 | var RadianQuadrantBinding;
 44 | (function (RadianQuadrantBinding) {
 45 |     RadianQuadrantBinding[RadianQuadrantBinding["TopRight"] = 2.35619449] = "TopRight";
 46 |     RadianQuadrantBinding[RadianQuadrantBinding["TopLeft"] = -2.35619449] = "TopLeft";
 47 |     RadianQuadrantBinding[RadianQuadrantBinding["BottomRight"] = 0.785398163] = "BottomRight";
 48 |     RadianQuadrantBinding[RadianQuadrantBinding["BottomLeft"] = -0.785398163] = "BottomLeft";
 49 | })(RadianQuadrantBinding || (RadianQuadrantBinding = {}));
 50 | var Joystick = /** @class */ (function (_super) {
 51 |     __extends(Joystick, _super);
 52 |     function Joystick(props) {
 53 |         var _this = _super.call(this, props) || this;
 54 |         _this._stickRef = React.createRef();
 55 |         _this._baseRef = React.createRef();
 56 |         _this.frameId = null;
 57 |         _this._pointerId = null;
 58 |         _this._mounted = false;
 59 |         /**
 60 |          * Calculate X/Y and ArcTan within the bounds of the joystick
 61 |          * @param event
 62 |          * @private
 63 |          */
 64 |         _this._pointerMove = function (event) {
 65 |             event.preventDefault();
 66 |             if (_this.state.dragging) {
 67 |                 if (!_this.props.followCursor && event.pointerId !== _this._pointerId)
 68 |                     return;
 69 |                 var absoluteX = event.clientX;
 70 |                 var absoluteY = event.clientY;
 71 |                 var relativeX = absoluteX - _this._parentRect.left - _this._radius;
 72 |                 var relativeY = absoluteY - _this._parentRect.top - _this._radius;
 73 |                 var dist = _this._distance(relativeX, relativeY);
 74 |                 // @ts-ignore
 75 |                 var bounded = (0, shape_bounds_factory_1.shapeBoundsFactory)(
 76 |                 //@ts-ignore
 77 |                 _this.props.controlPlaneShape || _this.props.baseShape, absoluteX, absoluteY, relativeX, relativeY, dist, _this._radius, _this._baseSize, _this._parentRect);
 78 |                 relativeX = bounded.relativeX;
 79 |                 relativeY = bounded.relativeY;
 80 |                 var atan2 = Math.atan2(relativeX, relativeY);
 81 |                 _this._updatePos({
 82 |                     relativeX: relativeX,
 83 |                     relativeY: relativeY,
 84 |                     distance: _this._distanceToPercentile(dist),
 85 |                     direction: _this._getDirection(atan2),
 86 |                     axisX: absoluteX - _this._parentRect.left,
 87 |                     axisY: absoluteY - _this._parentRect.top
 88 |                 });
 89 |             }
 90 |         };
 91 |         /**
 92 |          * Handle pointer up and de-register listen events
 93 |          * @private
 94 |          */
 95 |         _this._pointerUp = function (event) {
 96 |             if (event.pointerId !== _this._pointerId)
 97 |                 return;
 98 |             var stateUpdate = {
 99 |                 dragging: false,
100 |             };
101 |             if (!_this.props.sticky) {
102 |                 stateUpdate.coordinates = undefined;
103 |             }
104 |             _this.frameId = window.requestAnimationFrame(function () {
105 |                 if (_this._mounted) {
106 |                     _this.setState(stateUpdate);
107 |                 }
108 |             });
109 |             window.removeEventListener(InteractionEvents.PointerUp, _this._pointerUp);
110 |             window.removeEventListener(InteractionEvents.PointerMove, _this._pointerMove);
111 |             _this._pointerId = null;
112 |             if (_this.props.stop) {
113 |                 _this.props.stop({
114 |                     type: "stop",
115 |                     // @ts-ignore
116 |                     x: _this.props.sticky ? ((_this.state.coordinates.relativeX * 2) / _this._baseSize) : null,
117 |                     // @ts-ignore
118 |                     y: _this.props.sticky ? ((_this.state.coordinates.relativeY * 2) / _this._baseSize) : null,
119 |                     // @ts-ignore
120 |                     direction: _this.props.sticky ? _this.state.coordinates.direction : null,
121 |                     // @ts-ignore
122 |                     distance: _this.props.sticky ? _this.state.coordinates.distance : null
123 |                 });
124 |             }
125 |         };
126 |         _this.state = {
127 |             dragging: false
128 |         };
129 |         _this._throttleMoveCallback = (function () {
130 |             var lastCall = 0;
131 |             return function (event) {
132 |                 var now = new Date().getTime();
133 |                 var throttleAmount = _this.props.throttle || 0;
134 |                 if (now - lastCall < throttleAmount) {
135 |                     return;
136 |                 }
137 |                 lastCall = now;
138 |                 if (_this.props.move) {
139 |                     return _this.props.move(event);
140 |                 }
141 |             };
142 |         })();
143 |         return _this;
144 |     }
145 |     Joystick.prototype.componentWillUnmount = function () {
146 |         var _this = this;
147 |         this._mounted = false;
148 |         if (this.props.followCursor) {
149 |             window.removeEventListener(InteractionEvents.PointerMove, function (event) { return _this._pointerMove(event); });
150 |         }
151 |         if (this.frameId !== null) {
152 |             window.cancelAnimationFrame(this.frameId);
153 |         }
154 |     };
155 |     Joystick.prototype.componentDidMount = function () {
156 |         var _this = this;
157 |         this._mounted = true;
158 |         if (this.props.followCursor) {
159 |             //@ts-ignore
160 |             this._parentRect = this._baseRef.current.getBoundingClientRect();
161 |             this.setState({
162 |                 dragging: true
163 |             });
164 |             window.addEventListener(InteractionEvents.PointerMove, function (event) { return _this._pointerMove(event); });
165 |             if (this.props.start) {
166 |                 this.props.start({
167 |                     type: "start",
168 |                     x: null,
169 |                     y: null,
170 |                     distance: null,
171 |                     direction: null
172 |                 });
173 |             }
174 |         }
175 |     };
176 |     /**
177 |      * Update position of joystick - set state and trigger DOM manipulation
178 |      * @param coordinates
179 |      * @private
180 |      */
181 |     Joystick.prototype._updatePos = function (coordinates) {
182 |         var _this = this;
183 |         this.frameId = window.requestAnimationFrame(function () {
184 |             if (_this._mounted) {
185 |                 _this.setState({
186 |                     coordinates: coordinates,
187 |                 });
188 |             }
189 |         });
190 |         if (typeof this.props.minDistance === 'number') {
191 |             if (coordinates.distance < this.props.minDistance) {
192 |                 return;
193 |             }
194 |         }
195 |         this._throttleMoveCallback({
196 |             type: "move",
197 |             x: ((coordinates.relativeX * 2) / this._baseSize),
198 |             y: -((coordinates.relativeY * 2) / this._baseSize),
199 |             direction: coordinates.direction,
200 |             distance: coordinates.distance
201 |         });
202 |     };
203 |     /**
204 |      * Handle pointerdown event
205 |      * @param e PointerEvent
206 |      * @private
207 |      */
208 |     Joystick.prototype._pointerDown = function (e) {
209 |         if (this.props.disabled || this.props.followCursor) {
210 |             return;
211 |         }
212 |         //@ts-ignore
213 |         this._parentRect = this._baseRef.current.getBoundingClientRect();
214 |         this.setState({
215 |             dragging: true
216 |         });
217 |         window.addEventListener(InteractionEvents.PointerUp, this._pointerUp);
218 |         window.addEventListener(InteractionEvents.PointerMove, this._pointerMove);
219 |         this._pointerId = e.pointerId;
220 |         //@ts-ignore
221 |         this._stickRef.current.setPointerCapture(e.pointerId);
222 |         if (this.props.start) {
223 |             this.props.start({
224 |                 type: "start",
225 |                 x: null,
226 |                 y: null,
227 |                 distance: null,
228 |                 direction: null
229 |             });
230 |         }
231 |     };
232 |     /**
233 |      * Use ArcTan2 (4 Quadrant inverse tangent) to identify the direction the joystick is pointing
234 |      * https://docs.oracle.com/cd/B12037_01/olap.101/b10339/x_arcsin003.htm
235 |      * @param atan2: number
236 |      * @private
237 |      */
238 |     Joystick.prototype._getDirection = function (atan2) {
239 |         if (atan2 > RadianQuadrantBinding.TopRight || atan2 < RadianQuadrantBinding.TopLeft) {
240 |             return "FORWARD";
241 |         }
242 |         else if (atan2 < RadianQuadrantBinding.TopRight && atan2 > RadianQuadrantBinding.BottomRight) {
243 |             return "RIGHT";
244 |         }
245 |         else if (atan2 < RadianQuadrantBinding.BottomLeft) {
246 |             return "LEFT";
247 |         }
248 |         return "BACKWARD";
249 |     };
250 |     /**
251 |      * Hypotenuse distance calculation
252 |      * @param x: number
253 |      * @param y: number
254 |      * @private
255 |      */
256 |     Joystick.prototype._distance = function (x, y) {
257 |         return Math.hypot(x, y);
258 |     };
259 |     Joystick.prototype._distanceToPercentile = function (distance) {
260 |         var percentageBaseSize = distance / (this._baseSize / 2) * 100;
261 |         if (percentageBaseSize > 100) {
262 |             return 100;
263 |         }
264 |         return percentageBaseSize;
265 |     };
266 |     /**
267 |      * Get the shape stylings for the base
268 |      * @private
269 |      */
270 |     Joystick.prototype.getBaseShapeStyle = function () {
271 |         var shape = this.props.baseShape || shape_enum_1.JoystickShape.Circle;
272 |         return (0, shape_factory_1.shapeFactory)(shape, this._baseSize);
273 |     };
274 |     /**
275 |      * Get the shape stylings for the stick
276 |      * @private
277 |      */
278 |     Joystick.prototype.getStickShapeStyle = function () {
279 |         var shape = this.props.stickShape || shape_enum_1.JoystickShape.Circle;
280 |         return (0, shape_factory_1.shapeFactory)(shape, this._baseSize);
281 |     };
282 |     /**
283 |      * Calculate base styles for pad
284 |      * @private
285 |      */
286 |     Joystick.prototype._getBaseStyle = function () {
287 |         var baseColor = this.props.baseColor !== undefined ? this.props.baseColor : "#000033";
288 |         var baseSizeString = "".concat(this._baseSize, "px");
289 |         var padStyle = __assign(__assign({}, this.getBaseShapeStyle()), { height: baseSizeString, width: baseSizeString, background: baseColor, display: 'flex', justifyContent: 'center', alignItems: 'center' });
290 |         if (this.props.baseImage) {
291 |             padStyle.background = "url(".concat(this.props.baseImage, ")");
292 |             padStyle.backgroundSize = '100%';
293 |         }
294 |         return padStyle;
295 |     };
296 |     /**
297 |      * Calculate  base styles for joystick and translate
298 |      * @private
299 |      */
300 |     Joystick.prototype._getStickStyle = function () {
301 |         var stickColor = this.props.stickColor !== undefined ? this.props.stickColor : "#3D59AB";
302 |         var stickSize = this._stickSize ? "".concat(this._stickSize, "px") : "".concat(this._baseSize / 1.5, "px");
303 |         var stickStyle = __assign(__assign({}, this.getStickShapeStyle()), { background: stickColor, cursor: "move", height: stickSize, width: stickSize, border: 'none', flexShrink: 0, touchAction: 'none' });
304 |         if (this.props.stickImage) {
305 |             stickStyle.background = "url(".concat(this.props.stickImage, ")");
306 |             stickStyle.backgroundSize = '100%';
307 |         }
308 |         if (this.props.pos) {
309 |             stickStyle = Object.assign({}, stickStyle, {
310 |                 position: 'absolute',
311 |                 transform: "translate3d(".concat((this.props.pos.x * this._baseSize) / 2, "px, ").concat(-(this.props.pos.y * this._baseSize) / 2, "px, 0)")
312 |             });
313 |         }
314 |         if (this.state.coordinates !== undefined) {
315 |             stickStyle = Object.assign({}, stickStyle, {
316 |                 position: 'absolute',
317 |                 transform: "translate3d(".concat(this.state.coordinates.relativeX, "px, ").concat(this.state.coordinates.relativeY, "px, 0)")
318 |             });
319 |         }
320 |         return stickStyle;
321 |     };
322 |     Joystick.prototype.render = function () {
323 |         var _this = this;
324 |         this._baseSize = this.props.size || 100;
325 |         this._stickSize = this.props.stickSize;
326 |         this._radius = this._baseSize / 2;
327 |         var baseStyle = this._getBaseStyle();
328 |         var stickStyle = this._getStickStyle();
329 |         //@ts-ignore
330 |         return (React.createElement("div", { "data-testid": "joystick-base", className: this.props.disabled ? 'joystick-base-disabled' : '', ref: this._baseRef, style: baseStyle },
331 |             React.createElement("button", { ref: this._stickRef, disabled: this.props.disabled, onPointerDown: function (event) { return _this._pointerDown(event); }, className: this.props.disabled ? 'joystick-disabled' : '', style: stickStyle })));
332 |     };
333 |     return Joystick;
334 | }(React.Component));
335 | exports.Joystick = Joystick;
336 | //# sourceMappingURL=Joystick.js.map


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/build/lib/Joystick.js.map:
--------------------------------------------------------------------------------
1 | {"version":3,"file":"Joystick.js","sourceRoot":"","sources":["../../src/Joystick.tsx"],"names":[],"mappings":"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"}


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/build/lib/enums/shape.enum.d.ts:
--------------------------------------------------------------------------------
1 | export declare enum JoystickShape {
2 |     Circle = "circle",
3 |     Square = "square",
4 |     AxisY = "axisY",
5 |     AxisX = "axisX"
6 | }
7 | 


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/build/lib/enums/shape.enum.js:
--------------------------------------------------------------------------------
 1 | "use strict";
 2 | Object.defineProperty(exports, "__esModule", { value: true });
 3 | exports.JoystickShape = void 0;
 4 | var JoystickShape;
 5 | (function (JoystickShape) {
 6 |     JoystickShape["Circle"] = "circle";
 7 |     JoystickShape["Square"] = "square";
 8 |     JoystickShape["AxisY"] = "axisY";
 9 |     JoystickShape["AxisX"] = "axisX";
10 | })(JoystickShape = exports.JoystickShape || (exports.JoystickShape = {}));
11 | //# sourceMappingURL=shape.enum.js.map


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/build/lib/enums/shape.enum.js.map:
--------------------------------------------------------------------------------
1 | {"version":3,"file":"shape.enum.js","sourceRoot":"","sources":["../../../src/enums/shape.enum.ts"],"names":[],"mappings":";;;AAAA,IAAY,aAKX;AALD,WAAY,aAAa;IACrB,kCAAiB,CAAA;IACjB,kCAAiB,CAAA;IACjB,gCAAe,CAAA;IACf,gCAAe,CAAA;AACnB,CAAC,EALW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAKxB"}


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/build/lib/index.d.ts:
--------------------------------------------------------------------------------
1 | export { Joystick } from "./Joystick";
2 | export { JoystickShape } from './enums/shape.enum';
3 | 


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/build/lib/index.js:
--------------------------------------------------------------------------------
1 | "use strict";
2 | Object.defineProperty(exports, "__esModule", { value: true });
3 | exports.JoystickShape = exports.Joystick = void 0;
4 | var Joystick_1 = require("./Joystick");
5 | Object.defineProperty(exports, "Joystick", { enumerable: true, get: function () { return Joystick_1.Joystick; } });
6 | var shape_enum_1 = require("./enums/shape.enum");
7 | Object.defineProperty(exports, "JoystickShape", { enumerable: true, get: function () { return shape_enum_1.JoystickShape; } });
8 | //# sourceMappingURL=index.js.map


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/build/lib/index.js.map:
--------------------------------------------------------------------------------
1 | {"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.tsx"],"names":[],"mappings":";;;AAAA,uCAAsC;AAA7B,oGAAA,QAAQ,OAAA;AACjB,iDAAmD;AAA1C,2GAAA,aAAa,OAAA"}


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/build/lib/shapes/shape.bounds.factory.d.ts:
--------------------------------------------------------------------------------
1 | import { JoystickShape } from "../enums/shape.enum";
2 | export declare const shapeBoundsFactory: (shape: JoystickShape, absoluteX: number, absoluteY: number, relativeX: number, relativeY: number, dist: number, radius: number, baseSize: number, parentRect: DOMRect) => {
3 |     relativeX: number;
4 |     relativeY: number;
5 | };
6 | 


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/build/lib/shapes/shape.bounds.factory.js:
--------------------------------------------------------------------------------
 1 | "use strict";
 2 | Object.defineProperty(exports, "__esModule", { value: true });
 3 | exports.shapeBoundsFactory = void 0;
 4 | var shape_enum_1 = require("../enums/shape.enum");
 5 | var shapeBoundsFactory = function (shape, absoluteX, absoluteY, relativeX, relativeY, dist, radius, baseSize, parentRect) {
 6 |     switch (shape) {
 7 |         case shape_enum_1.JoystickShape.Square:
 8 |             relativeX = getWithinBounds(absoluteX - parentRect.left - (baseSize / 2), baseSize);
 9 |             relativeY = getWithinBounds(absoluteY - parentRect.top - (baseSize / 2), baseSize);
10 |             return { relativeX: relativeX, relativeY: relativeY };
11 |         case shape_enum_1.JoystickShape.AxisX:
12 |             relativeX = getWithinBounds(absoluteX - parentRect.left - (baseSize / 2), baseSize);
13 |             relativeY = 0;
14 |             return { relativeX: relativeX, relativeY: relativeY };
15 |         case shape_enum_1.JoystickShape.AxisY:
16 |             relativeX = 0;
17 |             relativeY = getWithinBounds(absoluteY - parentRect.top - (baseSize / 2), baseSize);
18 |             return { relativeX: relativeX, relativeY: relativeY };
19 |         default:
20 |             if (dist > radius) {
21 |                 relativeX *= radius / dist;
22 |                 relativeY *= radius / dist;
23 |             }
24 |             return { relativeX: relativeX, relativeY: relativeY };
25 |     }
26 | };
27 | exports.shapeBoundsFactory = shapeBoundsFactory;
28 | var getWithinBounds = function (value, baseSize) {
29 |     var halfBaseSize = baseSize / 2;
30 |     if (value > halfBaseSize) {
31 |         return halfBaseSize;
32 |     }
33 |     if (value < -(halfBaseSize)) {
34 |         return halfBaseSize * -1;
35 |     }
36 |     return value;
37 | };
38 | //# sourceMappingURL=shape.bounds.factory.js.map


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/build/lib/shapes/shape.bounds.factory.js.map:
--------------------------------------------------------------------------------
1 | {"version":3,"file":"shape.bounds.factory.js","sourceRoot":"","sources":["../../../src/shapes/shape.bounds.factory.ts"],"names":[],"mappings":";;;AAAA,kDAAkD;AAE3C,IAAM,kBAAkB,GAAG,UAC9B,KAAoB,EACpB,SAAgB,EAChB,SAAiB,EACjB,SAAgB,EAChB,SAAgB,EAChB,IAAW,EACX,MAAa,EACb,QAAgB,EAChB,UAAmB;IACnB,QAAQ,KAAK,EAAC;QACV,KAAK,0BAAa,CAAC,MAAM;YACrB,SAAS,GAAG,eAAe,CAAC,SAAS,GAAG,UAAU,CAAC,IAAI,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;YACpF,SAAS,GAAG,eAAe,CAAC,SAAS,GAAG,UAAU,CAAC,GAAG,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;YACnF,OAAO,EAAC,SAAS,WAAA,EAAE,SAAS,WAAA,EAAC,CAAC;QAClC,KAAK,0BAAa,CAAC,KAAK;YACpB,SAAS,GAAG,eAAe,CAAC,SAAS,GAAG,UAAU,CAAC,IAAI,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;YACpF,SAAS,GAAG,CAAC,CAAC;YAClB,OAAO,EAAC,SAAS,WAAA,EAAE,SAAS,WAAA,EAAC,CAAC;QAE9B,KAAK,0BAAa,CAAC,KAAK;YACpB,SAAS,GAAG,CAAC,CAAA;YACb,SAAS,GAAG,eAAe,CAAC,SAAS,GAAG,UAAU,CAAC,GAAG,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;YACnF,OAAO,EAAC,SAAS,WAAA,EAAE,SAAS,WAAA,EAAC,CAAC;QAClC;YACI,IAAI,IAAI,GAAG,MAAM,EAAE;gBACf,SAAS,IAAI,MAAM,GAAG,IAAI,CAAC;gBAC3B,SAAS,IAAI,MAAM,GAAG,IAAI,CAAC;aAC9B;YACD,OAAO,EAAC,SAAS,WAAA,EAAE,SAAS,WAAA,EAAC,CAAC;KAErC;AAEL,CAAC,CAAA;AAjCY,QAAA,kBAAkB,sBAiC9B;AAED,IAAM,eAAe,GAAG,UAAC,KAAY,EAAE,QAAe;IAClD,IAAM,YAAY,GAAG,QAAQ,GAAG,CAAC,CAAC;IAClC,IAAG,KAAK,GAAG,YAAY,EAAC;QACpB,OAAO,YAAY,CAAC;KACvB;IACD,IAAG,KAAK,GAAG,CAAC,CAAC,YAAY,CAAC,EAAC;QACvB,OAAO,YAAY,GAAG,CAAC,CAAC,CAAC;KAC5B;IACD,OAAO,KAAK,CAAA;AAChB,CAAC,CAAA"}


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/build/lib/shapes/shape.factory.d.ts:
--------------------------------------------------------------------------------
1 | import { JoystickShape } from "../enums/shape.enum";
2 | export declare const shapeFactory: (shape: JoystickShape, size: number) => {
3 |     borderRadius: number;
4 | };
5 | 


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/build/lib/shapes/shape.factory.js:
--------------------------------------------------------------------------------
 1 | "use strict";
 2 | Object.defineProperty(exports, "__esModule", { value: true });
 3 | exports.shapeFactory = void 0;
 4 | var shape_enum_1 = require("../enums/shape.enum");
 5 | var shapeFactory = function (shape, size) {
 6 |     switch (shape) {
 7 |         case shape_enum_1.JoystickShape.Square:
 8 |             return {
 9 |                 borderRadius: Math.sqrt(size)
10 |             };
11 |         case shape_enum_1.JoystickShape.Circle:
12 |         default:
13 |             return {
14 |                 borderRadius: size,
15 |             };
16 |     }
17 | };
18 | exports.shapeFactory = shapeFactory;
19 | //# sourceMappingURL=shape.factory.js.map


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/build/lib/shapes/shape.factory.js.map:
--------------------------------------------------------------------------------
1 | {"version":3,"file":"shape.factory.js","sourceRoot":"","sources":["../../../src/shapes/shape.factory.ts"],"names":[],"mappings":";;;AAAA,kDAAkD;AAE3C,IAAM,YAAY,GAAG,UAAC,KAAoB,EAAE,IAAY;IAC3D,QAAQ,KAAK,EAAC;QAEV,KAAK,0BAAa,CAAC,MAAM;YACrB,OAAQ;gBACJ,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;aAChC,CAAA;QACL,KAAK,0BAAa,CAAC,MAAM,CAAC;QAC1B;YACI,OAAO;gBACH,YAAY,EAAC,IAAI;aACpB,CAAC;KACT;AACL,CAAC,CAAA;AAbY,QAAA,YAAY,gBAaxB"}


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/package.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "name": "react-joystick-component",
 3 |   "description": "A snazzy React joystick component",
 4 |   "version": "6.2.1",
 5 |   "keywords": [
 6 |     "react",
 7 |     "joystick",
 8 |     "control",
 9 |     "component",
10 |     "typescript"
11 |   ],
12 |   "main": "build/lib/index.js",
13 |   "types": "build/lib/index.d.ts",
14 |   "files": [
15 |     "build/lib",
16 |     "src"
17 |   ],
18 |   "scripts": {
19 |     "storybook": "start-storybook -p 6006 -c .storybook",
20 |     "build": "tsc",
21 |     "prepublish": "yarn build",
22 |     "deploy-storybook": "storybook-to-ghpages",
23 |     "test": "react-scripts test",
24 |     "lint": "tslint -c tslint.json 'src/**/*.tsx' --fix && eslint src/**/*.tsx --fix --ext .ts"
25 |   },
26 |   "repository": "https://github.com/elmarti/react-joystick-component",
27 |   "author": "elmarti elmarti.tech@gmail.com",
28 |   "license": "MIT",
29 |   "devDependencies": {
30 |     "@storybook/addon-actions": "^6.4.9",
31 |     "@storybook/addon-essentials": "^6.4.9",
32 |     "@storybook/addon-links": "^6.4.9",
33 |     "@storybook/react": "^6.4.9",
34 |     "@storybook/storybook-deployer": "^2.8.16",
35 |     "@testing-library/jest-dom": "^5.16.5",
36 |     "@types/jest": "^27.4.0",
37 |     "@types/react": "17.0.38",
38 |     "@types/react-dom": "^17.0.11",
39 |     "@types/storybook__addon-actions": "^5.2.1",
40 |     "@typescript-eslint/eslint-plugin": "^5.9.0",
41 |     "@typescript-eslint/parser": "^5.9.0",
42 |     "awesome-typescript-loader": "^5.2.1",
43 |     "babel-core": "^6.26.0",
44 |     "babel-loader": "8.2.3",
45 |     "cpx": "^1.5.0",
46 |     "eslint": "^8.6.0",
47 |     "jest": "^27.4.7",
48 |     "react": "17.0.2",
49 |     "react-docgen-typescript-webpack-plugin": "^1.1.0",
50 |     "react-dom": "17.0.2",
51 |     "react-parallax-tilt": "^1.5.85",
52 |     "semantic-release-gitmoji": "^1.4.2",
53 |     "storybook-addon-jsx": "^7.3.14",
54 |     "ts-jest": "^27.1.2",
55 |     "tslint": "^6.1.3",
56 |     "typescript": "4.5.4",
57 |     "@testing-library/react": "12.1.2",
58 |     "react-scripts": "^5.0.1"
59 |   },
60 |   "peerDependencies": {
61 |     "react": ">=17.0.2",
62 |     "react-dom": ">=17.0.2"
63 |   }
64 | }
65 | 


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/src/Joystick.tsx:
--------------------------------------------------------------------------------
  1 | import * as React from 'react';
  2 | import {JoystickShape} from "./enums/shape.enum";
  3 | import {shapeFactory} from "./shapes/shape.factory";
  4 | import {shapeBoundsFactory} from "./shapes/shape.bounds.factory";
  5 | 
  6 | export interface IJoystickProps {
  7 |     size?: number;
  8 |     stickSize?: number;
  9 |     baseColor?: string;
 10 |     stickColor?: string;
 11 |     throttle?: number;
 12 |     disabled?: boolean;
 13 |     sticky?: boolean;
 14 |     move?: (event: IJoystickUpdateEvent) => void;
 15 |     stop?: (event: IJoystickUpdateEvent) => void;
 16 |     start?: (event: IJoystickUpdateEvent) => void;
 17 |     stickImage?: string;
 18 |     baseImage?: string;
 19 |     followCursor?: boolean;
 20 |     baseShape?: JoystickShape;
 21 |     stickShape?: JoystickShape;
 22 |     controlPlaneShape?: JoystickShape;
 23 |     minDistance?: number;
 24 |     pos?: {x: number, y: number};
 25 | }
 26 | 
 27 | 
 28 | enum InteractionEvents {
 29 |     PointerDown = "pointerdown",
 30 |     PointerMove = "pointermove",
 31 |     PointerUp = "pointerup"
 32 | }
 33 | 
 34 | export interface IJoystickUpdateEvent {
 35 |     type: "move" | "stop" | "start";
 36 |     // TODO: these could just be optional, but this may be a breaking change
 37 |     x: number | null;
 38 |     y: number | null;
 39 |     direction: JoystickDirection | null;
 40 |     distance: number | null;
 41 | }
 42 | 
 43 | export interface IJoystickState {
 44 |     dragging: boolean;
 45 |     coordinates?: IJoystickCoordinates;
 46 | }
 47 | 
 48 | type JoystickDirection = "FORWARD" | "RIGHT" | "LEFT" | "BACKWARD";
 49 | 
 50 | export interface IJoystickCoordinates {
 51 |     relativeX: number;
 52 |     relativeY: number;
 53 |     axisX: number;
 54 |     axisY: number;
 55 |     direction: JoystickDirection;
 56 |     distance: number;
 57 | }
 58 | 
 59 | 
 60 | /**
 61 |  * Radians identifying the direction of the joystick
 62 |  */
 63 | enum RadianQuadrantBinding {
 64 |     TopRight = 2.35619449,
 65 |     TopLeft = -2.35619449,
 66 |     BottomRight = 0.785398163,
 67 |     BottomLeft = -0.785398163
 68 | }
 69 | 
 70 | class Joystick extends React.Component<IJoystickProps, IJoystickState> {
 71 |     private readonly _stickRef: React.RefObject<HTMLButtonElement> = React.createRef();
 72 |     private readonly _baseRef: React.RefObject<HTMLDivElement> = React.createRef();
 73 |     private readonly _throttleMoveCallback: (data: IJoystickUpdateEvent) => void;
 74 |     private _baseSize: number;
 75 |     private _stickSize?: number;
 76 |     private frameId: number | null = null;
 77 | 
 78 |     private _radius: number;
 79 |     private _parentRect: DOMRect;
 80 |     private _pointerId: number|null = null
 81 |     private _mounted = false;
 82 | 
 83 |     constructor(props: IJoystickProps) {
 84 |         super(props);
 85 |         this.state = {
 86 |             dragging: false
 87 |         };
 88 |         this._throttleMoveCallback = (() => {
 89 |             let lastCall = 0;
 90 |             return (event: IJoystickUpdateEvent) => {
 91 | 
 92 |                 const now = new Date().getTime();
 93 |                 const throttleAmount = this.props.throttle || 0;
 94 |                 if (now - lastCall < throttleAmount) {
 95 |                     return;
 96 |                 }
 97 |                 lastCall = now;
 98 |                 if (this.props.move) {
 99 |                     return this.props.move(event);
100 |                 }
101 |             };
102 |         })();
103 | 
104 | 
105 | 
106 |     }
107 | 
108 |     componentWillUnmount() {
109 |         this._mounted = false;
110 |         if (this.props.followCursor) {
111 |             window.removeEventListener(InteractionEvents.PointerMove, event => this._pointerMove(event));
112 |         }
113 |         if (this.frameId !== null) {
114 |             window.cancelAnimationFrame(this.frameId);
115 |         }
116 |     }
117 | 
118 |     componentDidMount() {
119 |         this._mounted = true;
120 |         if (this.props.followCursor) {
121 |             //@ts-ignore
122 |             this._parentRect = this._baseRef.current.getBoundingClientRect();
123 | 
124 |             this.setState({
125 |                 dragging: true
126 |             });
127 | 
128 |             window.addEventListener(InteractionEvents.PointerMove, event => this._pointerMove(event));
129 | 
130 |             if (this.props.start) {
131 |                 this.props.start({
132 |                     type: "start",
133 |                     x: null,
134 |                     y: null,
135 |                     distance: null,
136 |                     direction: null
137 |                 });
138 |             }
139 | 
140 |         }
141 |     }
142 | 
143 |     /**
144 |      * Update position of joystick - set state and trigger DOM manipulation
145 |      * @param coordinates
146 |      * @private
147 |      */
148 |     private _updatePos(coordinates: IJoystickCoordinates) {
149 | 
150 |         this.frameId = window.requestAnimationFrame(() => {
151 |             if(this._mounted){
152 |                 this.setState({
153 |                     coordinates,
154 |                 });
155 |             }
156 |           });
157 |           
158 |         if(typeof this.props.minDistance ===  'number'){
159 |             if(coordinates.distance < this.props.minDistance){
160 |                 return;
161 |             }
162 |         }
163 |         this._throttleMoveCallback({
164 |             type: "move",
165 |             x: ((coordinates.relativeX * 2) / this._baseSize),
166 |             y: -((coordinates.relativeY * 2) / this._baseSize),
167 |             direction: coordinates.direction,
168 |             distance: coordinates.distance
169 |         });
170 | 
171 |     }
172 | 
173 |     /**
174 |      * Handle pointerdown event
175 |      * @param e PointerEvent
176 |      * @private
177 |      */
178 |     private _pointerDown(e: PointerEvent) {
179 |         if (this.props.disabled || this.props.followCursor) {
180 |             return;
181 |         }
182 |         //@ts-ignore
183 |         this._parentRect = this._baseRef.current.getBoundingClientRect();
184 | 
185 |         this.setState({
186 |             dragging: true
187 |         });
188 | 
189 |         window.addEventListener(InteractionEvents.PointerUp, this._pointerUp);
190 |         window.addEventListener(InteractionEvents.PointerMove, this._pointerMove);
191 |         this._pointerId = e.pointerId
192 |         //@ts-ignore
193 |         this._stickRef.current.setPointerCapture(e.pointerId);
194 | 
195 |         if (this.props.start) {
196 |             this.props.start({
197 |                 type: "start",
198 |                 x: null,
199 |                 y: null,
200 |                 distance: null,
201 |                 direction: null
202 |             });
203 |         }
204 | 
205 |     }
206 | 
207 |     /**
208 |      * Use ArcTan2 (4 Quadrant inverse tangent) to identify the direction the joystick is pointing
209 |      * https://docs.oracle.com/cd/B12037_01/olap.101/b10339/x_arcsin003.htm
210 |      * @param atan2: number
211 |      * @private
212 |      */
213 |     private _getDirection(atan2: number): JoystickDirection {
214 |         if (atan2 > RadianQuadrantBinding.TopRight || atan2 < RadianQuadrantBinding.TopLeft) {
215 |             return "FORWARD";
216 |         } else if (atan2 < RadianQuadrantBinding.TopRight && atan2 > RadianQuadrantBinding.BottomRight) {
217 |             return "RIGHT"
218 |         } else if (atan2 < RadianQuadrantBinding.BottomLeft) {
219 |             return "LEFT";
220 |         }
221 |         return "BACKWARD";
222 | 
223 | 
224 |     }
225 | 
226 |     /**
227 |      * Hypotenuse distance calculation
228 |      * @param x: number
229 |      * @param y: number
230 |      * @private
231 |      */
232 |     private _distance(x: number, y: number): number {
233 |         return Math.hypot(x, y);
234 |     }
235 |     private _distanceToPercentile(distance:number): number {
236 |         const percentageBaseSize = distance / (this._baseSize/2) * 100;
237 |         if(percentageBaseSize > 100){
238 |             return 100;
239 |         }
240 |         return percentageBaseSize;
241 |     }
242 | 
243 |     /**
244 |      * Calculate X/Y and ArcTan within the bounds of the joystick
245 |      * @param event
246 |      * @private
247 |      */
248 |     private _pointerMove = (event: PointerEvent) => {
249 |         event.preventDefault()
250 |         if (this.state.dragging) {
251 |             if(!this.props.followCursor && event.pointerId !== this._pointerId) return;
252 |             const absoluteX = event.clientX;
253 |             const absoluteY = event.clientY;
254 |             let relativeX = absoluteX - this._parentRect.left - this._radius;
255 |             let relativeY = absoluteY - this._parentRect.top - this._radius;
256 |             const dist = this._distance(relativeX, relativeY);
257 |             // @ts-ignore
258 |             const bounded = shapeBoundsFactory(
259 |                 //@ts-ignore
260 |                 this.props.controlPlaneShape || this.props.baseShape,
261 |                 absoluteX,
262 |                 absoluteY,
263 |                 relativeX,
264 |                 relativeY,
265 |                 dist,
266 |                 this._radius,
267 |                 this._baseSize,
268 |                 this._parentRect);
269 |             relativeX = bounded.relativeX
270 |             relativeY = bounded.relativeY
271 |             const atan2 = Math.atan2(relativeX, relativeY);
272 | 
273 |             this._updatePos({
274 |                 relativeX,
275 |                 relativeY,
276 |                 distance: this._distanceToPercentile(dist),
277 |                 direction: this._getDirection(atan2),
278 |                 axisX: absoluteX - this._parentRect.left,
279 |                 axisY: absoluteY - this._parentRect.top
280 |             });
281 |         }
282 |     }
283 | 
284 | 
285 | 
286 |     /**
287 |      * Handle pointer up and de-register listen events
288 |      * @private
289 |      */
290 |     private _pointerUp = (event: PointerEvent) => {
291 |         if(event.pointerId !== this._pointerId) return;
292 |         const stateUpdate = {
293 |             dragging: false,
294 |         } as any;
295 |         if (!this.props.sticky) {
296 |             stateUpdate.coordinates = undefined;
297 |         }
298 |         this.frameId = window.requestAnimationFrame(() => {
299 |             if(this._mounted){
300 |                 this.setState(stateUpdate);
301 |             }
302 |           });
303 |           
304 |         window.removeEventListener(InteractionEvents.PointerUp, this._pointerUp);
305 |         window.removeEventListener(InteractionEvents.PointerMove, this._pointerMove);
306 |         this._pointerId = null;
307 |         if (this.props.stop) {
308 |             this.props.stop({
309 |                 type: "stop",
310 |                 // @ts-ignore
311 |                 x: this.props.sticky ? ((this.state.coordinates.relativeX * 2) / this._baseSize) : null,
312 |                 // @ts-ignore
313 |                 y: this.props.sticky ? ((this.state.coordinates.relativeY * 2) / this._baseSize): null,
314 |                 // @ts-ignore
315 |                 direction: this.props.sticky ? this.state.coordinates.direction : null,
316 |                 // @ts-ignore
317 |                 distance: this.props.sticky ? this.state.coordinates.distance : null
318 | 
319 |             });
320 |         }
321 | 
322 |     }
323 | 
324 |     /**
325 |      * Get the shape stylings for the base
326 |      * @private
327 |      */
328 |     private getBaseShapeStyle() {
329 |         const shape = this.props.baseShape || JoystickShape.Circle;
330 |         return shapeFactory(shape, this._baseSize);
331 |     }
332 |     /**
333 |      * Get the shape stylings for the stick
334 |      * @private
335 |      */
336 |     private getStickShapeStyle() {
337 |         const shape = this.props.stickShape || JoystickShape.Circle;
338 |         return shapeFactory(shape, this._baseSize);
339 |     }
340 |     /**
341 |      * Calculate base styles for pad
342 |      * @private
343 |      */
344 |     private _getBaseStyle(): any {
345 |         const baseColor: string = this.props.baseColor !== undefined ? this.props.baseColor : "#000033";
346 | 
347 |         const baseSizeString = `${this._baseSize}px`;
348 |         const padStyle = {
349 |             ...this.getBaseShapeStyle(),
350 |             height: baseSizeString,
351 |             width: baseSizeString,
352 |             background: baseColor,
353 |             display: 'flex',
354 |             justifyContent: 'center',
355 |             alignItems: 'center',
356 |         } as any;
357 |         if (this.props.baseImage) {
358 |             padStyle.background = `url(${this.props.baseImage})`;
359 |             padStyle.backgroundSize = '100%'
360 |         }
361 |         return padStyle;
362 | 
363 |     }
364 | 
365 |     /**
366 |      * Calculate  base styles for joystick and translate
367 |      * @private
368 |      */
369 |     private _getStickStyle(): any {
370 |         const stickColor: string = this.props.stickColor !== undefined ? this.props.stickColor : "#3D59AB";
371 |         const stickSize = this._stickSize ? `${this._stickSize}px` :`${this._baseSize / 1.5}px`;
372 | 
373 |         let stickStyle = {
374 |             ...this.getStickShapeStyle(),
375 |             background: stickColor,
376 |             cursor: "move",
377 |             height: stickSize,
378 |             width: stickSize,
379 |             border: 'none',
380 |             flexShrink: 0,
381 |             touchAction: 'none',
382 |             backgroundImage:
383 |             "repeating-radial-gradient(circle at center, rgba(255,255,255,0.25), rgba(177, 177, 177, 0.1) 3px, transparent 6px)",
384 |         } as any;
385 |         if (this.props.stickImage) {
386 |             stickStyle.background = `url(${this.props.stickImage})`;
387 |             stickStyle.backgroundSize = '100%'
388 |         }
389 |         if(this.props.pos){
390 |             stickStyle = Object.assign({}, stickStyle, {
391 |                 position: 'absolute',
392 |                 transform: `translate3d(${(this.props.pos.x * this._baseSize)/2 }px, ${-(this.props.pos.y * this._baseSize)/2}px, 0)`
393 |             });
394 |         }
395 | 
396 |         if (this.state.coordinates !== undefined) {
397 |             stickStyle = Object.assign({}, stickStyle, {
398 |                 position: 'absolute',
399 |                 transform: `translate3d(${this.state.coordinates.relativeX}px, ${this.state.coordinates.relativeY}px, 0)`
400 |             });
401 |         }
402 |         return stickStyle;
403 | 
404 |     }
405 | 
406 |     render() {
407 |         this._baseSize = this.props.size || 100;
408 |         this._stickSize = this.props.stickSize;
409 |         this._radius = this._baseSize / 2;
410 |         const baseStyle = this._getBaseStyle();
411 |         const stickStyle = this._getStickStyle();
412 |         //@ts-ignore
413 |         return (
414 |             <div data-testid="joystick-base" className={'joystick-base'}
415 | 
416 |                  ref={this._baseRef}
417 |                  style={baseStyle}>
418 |                 <button ref={this._stickRef}
419 |                         disabled={this.props.disabled}
420 |                         onPointerDown={(event: any) => this._pointerDown(event)}
421 |                         className={this.props.disabled ? 'joystick-disabled' : 'test'}
422 |                         style={stickStyle}/>
423 |             </div>
424 |         )
425 |     }
426 | }
427 | 
428 | export {
429 |     Joystick
430 | };
431 | 


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/src/enums/shape.enum.ts:
--------------------------------------------------------------------------------
1 | export enum JoystickShape {
2 |     Circle = 'circle',
3 |     Square = 'square',
4 |     AxisY = 'axisY',
5 |     AxisX = 'axisX',
6 | }


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/src/index.tsx:
--------------------------------------------------------------------------------
1 | export { Joystick } from "./Joystick";
2 | export { JoystickShape } from './enums/shape.enum';


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/src/shapes/shape.bounds.factory.ts:
--------------------------------------------------------------------------------
 1 | import {JoystickShape} from "../enums/shape.enum";
 2 | 
 3 | export const shapeBoundsFactory = (
 4 |     shape: JoystickShape,
 5 |     absoluteX:number,
 6 |     absoluteY: number,
 7 |     relativeX:number,
 8 |     relativeY:number,
 9 |     dist:number,
10 |     radius:number,
11 |     baseSize: number,
12 |     parentRect: DOMRect) => {
13 |     switch (shape){
14 |         case JoystickShape.Square:
15 |             relativeX = getWithinBounds(absoluteX - parentRect.left - (baseSize / 2), baseSize);
16 |             relativeY = getWithinBounds(absoluteY - parentRect.top - (baseSize / 2), baseSize);
17 |             return {relativeX, relativeY};
18 |         case JoystickShape.AxisX:
19 |             relativeX = getWithinBounds(absoluteX - parentRect.left - (baseSize / 2), baseSize);
20 |             relativeY = 0;
21 |         return {relativeX, relativeY};
22 | 
23 |         case JoystickShape.AxisY:
24 |             relativeX = 0
25 |             relativeY = getWithinBounds(absoluteY - parentRect.top - (baseSize / 2), baseSize);
26 |             return {relativeX, relativeY};
27 |         default:
28 |             if (dist > radius) {
29 |                 relativeX *= radius / dist;
30 |                 relativeY *= radius / dist;
31 |             }
32 |             return {relativeX, relativeY};
33 | 
34 |     }
35 | 
36 | }
37 | 
38 | const getWithinBounds = (value:number, baseSize:number): number =>  {
39 |     const halfBaseSize = baseSize / 2;
40 |     if(value > halfBaseSize){
41 |         return halfBaseSize;
42 |     }
43 |     if(value < -(halfBaseSize)){
44 |         return halfBaseSize * -1;
45 |     }
46 |     return value
47 | }


--------------------------------------------------------------------------------
/src/mobile/react-joystick-component/src/shapes/shape.factory.ts:
--------------------------------------------------------------------------------
 1 | import {JoystickShape} from "../enums/shape.enum";
 2 | 
 3 | export const shapeFactory = (shape: JoystickShape, size: number) =>{
 4 |     switch (shape){
 5 |       
 6 |         case JoystickShape.Square:
 7 |             return  {
 8 |                 borderRadius: Math.sqrt(size)
 9 |             }
10 |         case JoystickShape.Circle:
11 |         default:
12 |             return {
13 |                 borderRadius:size,
14 |             };
15 |     }
16 | }


--------------------------------------------------------------------------------
/src/models/Luma/Glow.jsx:
--------------------------------------------------------------------------------
 1 | import { Billboard } from "@react-three/drei"
 2 | import { useFrame } from "@react-three/fiber";
 3 | import { useRef } from "react";
 4 | import { Color } from "three"
 5 | 
 6 | 
 7 | 
 8 | export const Glow = () => {
 9 |   const materialRef = useRef(null);
10 |   const vertexShader = /* glsl */ `
11 |     varying vec2 vUv;
12 |     void main() {
13 |       vUv = uv;
14 |       gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
15 |     }
16 |   `;
17 |   const fragmentShader = /* glsl */ `
18 |     uniform float time;
19 |     uniform vec3 color;
20 |     uniform float opacity;
21 |     varying vec2 vUv;
22 |     void main() {
23 | 
24 |     vec3 lightColor = vec3(0.937, 0.876, 0.4);
25 |     vec2 center = vec2(0.5, 0.5);
26 |     float dist = distance(vUv, center);
27 |   
28 |     float start = 0.2;
29 |     float end = 0.5;
30 |     float fade = smoothstep(end, start, dist);
31 |     float colorScalar = 2.;
32 | 
33 |     gl_FragColor = vec4(lightColor * colorScalar, fade * .2);
34 |     }
35 |   `;
36 |   
37 |   useFrame((state)=>{
38 |       materialRef.current.uniforms.time.value = state.clock.getElapsedTime();
39 |   })
40 |   const size = 1;
41 |   return(
42 |     <Billboard>
43 |       <mesh>
44 |         <planeGeometry args={[size, size]} />
45 |         <shaderMaterial 
46 |         ref={materialRef}
47 |           uniforms={{
48 |             time: { value: 0 },
49 |             color: { value: new Color(0xffffff) },
50 |             opacity: { value: 1.0 },
51 |           }}
52 |           vertexShader={vertexShader}
53 |           fragmentShader={fragmentShader}
54 |           transparent={true}
55 |           depthWrite={false}
56 |         />
57 |       </mesh>
58 |     </Billboard>
59 |   )
60 | }
61 | //   uniforms: {
62 | //     time: { value: 0 },
63 | //     color: { value: new Color(0xffffff) },
64 | //     opacity: { value: 1.0 },
65 | //   },
66 | //   vertexShader: `
67 | //     varying vec2 vUv;
68 | //     void main() {
69 | //       vUv = uv;
70 | //       gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
71 | //     }
72 | //   `,
73 | //   fragmentShader: `
74 | //     uniform float time;
75 | //     uniform vec3 color;
76 | //     uniform float opacity;
77 | //     varying vec2 vUv;
78 | //     void main() {
79 | //       float dist = distance(vUv, vec2(0.5));
80 | //       float alpha = smoothstep(0.45, 0.55, dist);
81 | //       gl_FragColor = vec4(color, alpha * opacity);
82 | //     }
83 | //   `,
84 | // });
85 | 
86 | 


--------------------------------------------------------------------------------
/src/models/Luma/Luma.jsx:
--------------------------------------------------------------------------------
  1 | import { useEffect, useMemo, useRef } from "react";
  2 | import { useFrame, useGraph, useLoader } from "@react-three/fiber";
  3 | import { useGLTF } from "@react-three/drei";
  4 | import { SkeletonUtils } from "three-stdlib";
  5 | import { AnimationMixer, Color, MeshBasicMaterial, TextureLoader, Vector3 } from "three";
  6 | import CSM from "three-custom-shader-material/vanilla";
  7 | import { Glow } from "./Glow";
  8 | import { Particles } from "./Particles";
  9 | import { Particles2 } from "./Particles2";
 10 | import { useGameStore } from "../../store/store";
 11 | import { vec3 } from "@react-three/rapier";
 12 | 
 13 | export function Luma() {
 14 |   const group = useRef();
 15 |   const { scene, animations } = useGLTF("./models/npc/luma.glb");
 16 |   const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);
 17 |   const { nodes, materials } = useGraph(clone);
 18 |   const mixerRef = useRef();
 19 |   const boneRef = useRef();
 20 |   const lookAtRef = useRef();
 21 |   const setLookAtCharacter = useGameStore((state) => state.setLookAtCharacter);
 22 |   const noiseTexture = useLoader(
 23 |     TextureLoader,
 24 |     "./textures/luma/noiseColor.png"
 25 |   );
 26 | 
 27 |   const vertexShader = /* glsl */ `
 28 |   varying vec3 vPosition;
 29 |   varying vec2 vUv;
 30 |   varying vec3 vNormal;
 31 | 
 32 |   void main() {
 33 |     vPosition = position;
 34 |     vUv = uv;
 35 |     vNormal = normalize(normalMatrix * normal);
 36 |     csm_PositionRaw = modelViewMatrix * vec4(position, 1.);
 37 |   }`;
 38 | 
 39 |   const fragmentShader = /* glsl */ `
 40 |     uniform vec3 emissiveTest;
 41 |     // varying vec3 vNormal;
 42 |     varying vec2 vUv;
 43 |     varying vec3 vPosition;
 44 | 
 45 |     void main() {
 46 |         vec3 mainColor = vec3(4., 0.7, 0.);
 47 |     
 48 |         float upwardness = dot(normalize(vNormal), vec3(0.0, 1.0, 0.0));
 49 |         upwardness = clamp(upwardness, 0.0, 0.7);
 50 |     
 51 | 
 52 |         float levels = 12.0;
 53 |         float stepped = floor((1. - upwardness) * levels) / levels;
 54 |         vec3 baseColor = mainColor * stepped;
 55 |     
 56 |         vec3 fixedDirection = vec3(0.0, 0.0, 1.0);
 57 |         vec3 worldFixedDirection = normalize((viewMatrix * vec4(fixedDirection, 0.0)).xyz); 
 58 |         float edgeFactor = 1.2 - abs(dot(vNormal, worldFixedDirection));
 59 |           
 60 | 
 61 |         float edgeBrightness = smoothstep(0.1, 0.8, edgeFactor);
 62 |         vec3 edgeColor = mainColor * edgeBrightness * 2.0;
 63 |     
 64 |         vec3 finalColor = mix(baseColor, edgeColor, edgeBrightness);
 65 |     
 66 | 
 67 |         csm_DiffuseColor = vec4(finalColor, 1.0);
 68 |     }
 69 | 
 70 |     `;
 71 | 
 72 |   const lumaMaterial = useMemo(
 73 |     () =>
 74 |       new CSM({
 75 |         baseMaterial: new MeshBasicMaterial({}),
 76 |         vertexShader: vertexShader,
 77 |         fragmentShader: fragmentShader,
 78 |         uniforms: {
 79 |           emissiveTest: new Color(0xffdf00),
 80 |         },
 81 |       }),
 82 |     [fragmentShader, vertexShader]
 83 |   );
 84 |   const idleClip = animations.find((clip) => clip.name === "Luma Idle");
 85 | 
 86 |   useEffect(() => {
 87 |     if (!group.current || animations.length === 0) return;
 88 |     // materials.Body = lumaMaterial;
 89 | 
 90 |     mixerRef.current = new AnimationMixer(group.current);
 91 |     if (idleClip) {
 92 |       const action = mixerRef.current.clipAction(idleClip);
 93 |       action.play();
 94 |     }
 95 | 
 96 |     return () => mixerRef.current?.stopAllAction();
 97 |   }, [animations, idleClip, lumaMaterial, materials, nodes.Object_9.skeleton.bones]);
 98 | 
 99 |   const lookAtRange = 7;
100 |   const targetLookAt = useRef(new Vector3());
101 | const defaultLookAt = new Vector3(0, -1, 0);
102 |   useFrame((state, delta) => {
103 |     if (!boneRef.current || !lookAtRef.current) return;
104 |     mixerRef.current?.update(delta);
105 |   
106 |     const playerPosition = useGameStore.getState().playerPosition;
107 |     const lumaPosition = boneRef.current.getWorldPosition(new Vector3());
108 |   
109 |     if (!playerPosition) return;
110 |   
111 | 
112 |   
113 |     const isWithinRange =
114 |       lumaPosition.distanceToSquared(playerPosition) < lookAtRange ** 2;
115 |   
116 |     const desiredTarget = isWithinRange ? vec3(playerPosition) : defaultLookAt;
117 |   
118 |     targetLookAt.current.lerp(desiredTarget, 4 * delta); 
119 |   
120 |     boneRef.current.lookAt(targetLookAt.current);
121 |   
122 |     if (isWithinRange) {
123 |       setLookAtCharacter(lumaPosition);
124 |     } else {
125 |       setLookAtCharacter(undefined);
126 |     }
127 |   });
128 | 
129 |   return (
130 |     <group
131 |       ref={group}
132 |       position={[0, -1, 5]}
133 |       dispose={null}
134 |       scale={1.4}
135 |     >
136 |       <Particles2 />
137 |       <group ref={lookAtRef} position={[0, -1, 0]}></group>
138 |       <group name="Scene">
139 |         <group name="Sketchfab_model" rotation={[Math.PI / 2, Math.PI, 0]}>
140 |           <group
141 |             name="9735264f7a1547e580e7fa7a7d74c891fbx"
142 |             rotation={[Math.PI / 2, 0, 0]}
143 |             scale={0.01}
144 |           >
145 |             <group name="Object_2">
146 |               <group name="RootNode">
147 |                 <group
148 |                   name="LumaMesh"
149 |                   position={[0, 0, 0]}
150 |                   rotation={[-Math.PI / 2, 0, 0]}
151 |                   scale={14.32}
152 |                 />
153 |                 <group
154 |                   name="LumaRig"
155 |                   position={[0, 0, 0]}
156 |                   rotation={[-Math.PI / 2, 0, 0]}
157 |                   scale={100}
158 |                 >
159 |                   <group name="Object_6">
160 |                     <primitive object={nodes._rootJoint} />
161 |                     <group
162 |                       name="Object_8"
163 |                       position={[0, 0, 0]}
164 |                       rotation={[-Math.PI / 2, 0, 0]}
165 |                       scale={14.32}
166 |                     />
167 |                     {/* <group ref={glowRef}>
168 |                       <Glow/>
169 |                     </group> */}
170 |                     <primitive
171 |                       ref={boneRef}
172 |                       object={nodes.Object_9.skeleton.bones.find(
173 |                         (bone) => bone.name === "root_00"
174 |                       )}
175 |                     >
176 |                       <Glow />
177 |                       <Particles noiseTexture={noiseTexture} />
178 |                     </primitive>
179 |                     <skinnedMesh
180 |                       name="Object_10"
181 |                       geometry={nodes.Object_10.geometry}
182 |                       material={materials.material}
183 |                       skeleton={nodes.Object_10.skeleton}
184 |                     />
185 |                     <skinnedMesh
186 |                       name="Object_9"
187 |                       geometry={nodes.Object_9.geometry}
188 |                       material={lumaMaterial}
189 |                       skeleton={nodes.Object_9.skeleton}
190 |                     />
191 |                   </group>
192 |                 </group>
193 |               </group>
194 |             </group>
195 |           </group>
196 |         </group>
197 |       </group>
198 |     </group>
199 |   );
200 | }
201 | 
202 | useGLTF.preload("./models/npc/luma.glb");
203 | 


--------------------------------------------------------------------------------
/src/models/Luma/Particles.jsx:
--------------------------------------------------------------------------------
  1 | import {
  2 |   AdditiveBlending,
  3 |   BufferGeometry,
  4 |   Float32BufferAttribute,
  5 |   MathUtils,
  6 |   TextureLoader,
  7 | } from "three";
  8 | import { useRef, useMemo } from "react";
  9 | import { useFrame, useLoader } from "@react-three/fiber";
 10 | 
 11 | const vertexShader = /* glsl */ `
 12 | attribute float size;
 13 | attribute vec3 direction;
 14 | attribute float timeOffset;
 15 | attribute float blinkingSpeed;
 16 | 
 17 | uniform float uTime;
 18 | 
 19 | varying float vTimeOffset;
 20 | varying float vBlinkingSpeed;
 21 | varying float vDepth;
 22 | varying vec2 vUv;
 23 |   
 24 |   void main() {
 25 |       vTimeOffset = timeOffset;
 26 |       vBlinkingSpeed = blinkingSpeed;
 27 |       vUv = uv;
 28 |   
 29 |       float cycleDuration = 4.0;
 30 |       float localTime = mod(uTime + timeOffset, cycleDuration);
 31 |   
 32 |       float scale = smoothstep(0.1, 0.5, localTime);
 33 |       if (localTime > 0.4) {
 34 |           scale = smoothstep(0.7, 1.0, localTime);
 35 |           scale = 1.0 - scale; 
 36 |       }
 37 |     
 38 |       vec3 animatedPosition = position + direction * sin((uTime * 0.5) + timeOffset);
 39 |       vec4 mvPosition = modelViewMatrix * vec4(animatedPosition, 1.0);
 40 |       vDepth = -mvPosition.z;
 41 |   
 42 |       gl_PointSize = size * scale;
 43 |       gl_Position = projectionMatrix * mvPosition;
 44 |   }
 45 | `;
 46 | 
 47 | const fragmentShader = /* glsl */ `
 48 | varying float vTimeOffset;
 49 | varying float vBlinkingSpeed;
 50 | varying float vDepth;
 51 | varying vec2 vUv;
 52 | 
 53 | uniform float uTime;
 54 | uniform float uMaxOpacity;
 55 | uniform sampler2D uAlphaTexture;
 56 | uniform sampler2D uNoiseTexture;
 57 | 
 58 | void main() {
 59 |     vec2 coord = gl_PointCoord - 0.5;
 60 |     float angle = uTime * 3.0 + vTimeOffset;
 61 |     float s = sin(angle);
 62 |     float c = cos(angle);
 63 |     mat2 rotation = mat2(c, -s, s, c);
 64 |     coord = rotation * coord + 0.5;
 65 | 
 66 |     vec4 alphaTex = texture2D(uAlphaTexture, coord);
 67 |     // if (alphaTex.a < 0.9) discard;
 68 | 
 69 | 
 70 |     float scrollSpeed = 0.5;
 71 |     float noiseScale = .0001;
 72 | 
 73 |     vec2 noiseUV = mod(vUv * noiseScale + vec2(uTime * scrollSpeed), 1.0);
 74 | 
 75 |     vec4 noiseColor = texture2D(uNoiseTexture, noiseUV);
 76 | 
 77 | 
 78 |     gl_FragColor = vec4(vec3(noiseColor.r, noiseColor.g, noiseColor.b * 0.5), alphaTex.a * uMaxOpacity);
 79 | }
 80 | `;
 81 | 
 82 | export const Particles = ({ noiseTexture }) => {
 83 |   const pointsRef = useRef();
 84 |   const materialRef = useRef();
 85 | 
 86 |   const particleCount = 10;
 87 |   // const colorsRGB = [
 88 |   //   [238, 175, 74],
 89 |   //   [239, 198, 117],
 90 |   //   [174, 132, 86],
 91 |   //   [255, 222, 189],
 92 |   //   [255, 175, 108],
 93 |   // ];
 94 |   const baseSize = 40;
 95 |   const directionMultiplier = 0.2;
 96 |   const alphaTexture = useLoader(TextureLoader, "./textures/luma/sparkles.png");
 97 | 
 98 |   const particles = useMemo(() => {
 99 |     const positions = [];
100 |     const sizes = [];
101 |     const directions = [];
102 |     const timeOffsets = [];
103 |     const blinkingSpeeds = [];
104 | 
105 |     for (let i = 0; i < particleCount; i++) {
106 |       const x = (Math.random() - 0.5) * 0.7;
107 |       const y = (Math.random() - 0.5) * 0.5 + 0.3;
108 |       const z = 0;
109 |       positions.push(x, y, z);
110 | 
111 |       const size = baseSize * Math.random() + 20;
112 |       sizes.push(size);
113 |       directions.push(
114 |         (Math.random() - 0.5) * directionMultiplier,
115 |         (Math.random() - 0.5) * directionMultiplier,
116 |         (Math.random() - 0.5) * directionMultiplier
117 |       );
118 | 
119 |       blinkingSpeeds.push(Math.random());
120 |       timeOffsets.push(Math.random() * 5);
121 |     }
122 | 
123 |     const geometry = new BufferGeometry();
124 |     geometry.setAttribute("position", new Float32BufferAttribute(positions, 3));
125 |     geometry.setAttribute("size", new Float32BufferAttribute(sizes, 1));
126 |     geometry.setAttribute(
127 |       "direction",
128 |       new Float32BufferAttribute(directions, 3)
129 |     );
130 |     geometry.setAttribute(
131 |       "timeOffset",
132 |       new Float32BufferAttribute(timeOffsets, 1)
133 |     );
134 |     geometry.setAttribute(
135 |       "blinkingSpeed",
136 |       new Float32BufferAttribute(blinkingSpeeds, 1)
137 |     );
138 | 
139 |     return geometry;
140 |   }, [particleCount, baseSize]);
141 | 
142 | 
143 |   useFrame((state) => {
144 |     if (materialRef.current) {
145 |       materialRef.current.uniforms.uTime.value = state.clock.elapsedTime;
146 | 
147 |     }
148 |   });
149 | 
150 |   return (
151 |     <points ref={pointsRef} geometry={particles}>
152 |       <shaderMaterial
153 |         ref={materialRef}
154 |         attach="material"
155 |         uniforms={{
156 |           uTime: { value: 0 },
157 |           uMaxOpacity: { value: 1 },
158 |           uAlphaTexture: { value: alphaTexture },
159 |           uNoiseTexture: { value: noiseTexture },
160 |         }}
161 |         vertexShader={vertexShader}
162 |         fragmentShader={fragmentShader}
163 |         vertexColors
164 |         transparent
165 |         depthWrite={false}
166 |         blending={AdditiveBlending}
167 |       />
168 |     </points>
169 |   );
170 | };
171 | 


--------------------------------------------------------------------------------
/src/models/Luma/Particles2.jsx:
--------------------------------------------------------------------------------
  1 | import {
  2 |   AdditiveBlending,
  3 |   BufferGeometry,
  4 |   Float32BufferAttribute,
  5 |   MathUtils,
  6 |   TextureLoader,
  7 | } from "three";
  8 | import { useRef } from "react";
  9 | import { useFrame, useLoader } from "@react-three/fiber";
 10 | import { Billboard } from "@react-three/drei";
 11 | 
 12 | const vertexShader = /* glsl */ `
 13 | attribute float size;
 14 | attribute vec3 direction;
 15 | attribute float timeOffset;
 16 | 
 17 | uniform float uTime;
 18 | 
 19 | varying float vTimeOffset;
 20 | varying vec2 vUv;
 21 | 
 22 | void main() {
 23 |   vTimeOffset = timeOffset;
 24 |   vUv = uv;
 25 |   
 26 |   vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);
 27 |   
 28 |   gl_Position = projectionMatrix * mvPosition;
 29 | }
 30 | `;
 31 | 
 32 | const fragmentShader = /* glsl */ `
 33 | varying float vTimeOffset;
 34 | varying vec2 vUv;
 35 | 
 36 | uniform float uTime;
 37 | uniform float uMaxOpacity;
 38 | uniform sampler2D uNoiseTexture;
 39 | uniform sampler2D uStarTexture;
 40 | 
 41 |   
 42 |   void main() {
 43 |       vec2 coord = vUv;
 44 |   
 45 |   
 46 |       vec4 starTex = texture2D(uStarTexture, coord * 0.8);
 47 |   
 48 |       float scrollSpeed = 0.01;
 49 |       float noiseScale = 0.1;
 50 |       vec2 noiseUV = mod(coord * noiseScale + vec2(uTime * scrollSpeed), 1.0);
 51 |       vec4 noiseTex = texture2D(uNoiseTexture, noiseUV);
 52 | 
 53 |       vec2 center = vec2(0.5, 0.5);
 54 |       float dist = distance(vUv, center);
 55 |     
 56 |       float start = 0.2;
 57 |       float end = 0.5;
 58 |       float fade = smoothstep(end, start, dist);
 59 |   
 60 |       float opacity = starTex.a * noiseTex.r * uMaxOpacity;
 61 |   
 62 |       if (opacity < 0.01) discard;
 63 |   
 64 |       gl_FragColor = vec4(starTex.rgb, opacity * fade);
 65 | }
 66 | `;
 67 | 
 68 | export const Particles2 = () => {
 69 |   const materialRef = useRef();
 70 |   const starTexture = useLoader(TextureLoader, "./textures/luma/stars.webp");
 71 |   const noiseTexture = useLoader(TextureLoader, "./textures/luma/noiseTex.png");
 72 | 
 73 |   useFrame((state) => {
 74 |     if (materialRef.current) {
 75 |       materialRef.current.uniforms.uTime.value = state.clock.elapsedTime;
 76 |     }
 77 |   });
 78 | 
 79 |   return (
 80 |     <Billboard>
 81 |       <mesh >
 82 |         <planeGeometry args={[1.7, 1.7]} />
 83 |         <shaderMaterial
 84 |           ref={materialRef}
 85 |           attach="material"
 86 |           uniforms={{
 87 |             uTime: { value: 0 },
 88 |             uMaxOpacity: { value: 1 },
 89 |             uNoiseTexture: { value: noiseTexture },
 90 |             uStarTexture: { value: starTexture },
 91 |           }}
 92 |           vertexShader={vertexShader}
 93 |           fragmentShader={fragmentShader}
 94 |           vertexColors
 95 |           transparent
 96 |           depthWrite={false}
 97 |           blending={AdditiveBlending}
 98 |         />
 99 |       </mesh>
100 |     </Billboard>
101 |   );
102 | };
103 | 


--------------------------------------------------------------------------------
/src/models/Mario.jsx:
--------------------------------------------------------------------------------
 1 | import React, { useRef } from 'react'
 2 | import { useGraph, useFrame } from '@react-three/fiber'
 3 | import { useGLTF, useAnimations } from '@react-three/drei'
 4 | import { SkeletonUtils } from 'three-stdlib'
 5 | import { useGameStore } from '../store/store'
 6 | import { LoopOnce } from 'three'
 7 | import { maxSpeed } from '../constants'
 8 | 
 9 | export const Mario = ({speedRef}) => {
10 |   const group = useRef()
11 |   const { scene, animations } = useGLTF('/models/player/mario.glb')
12 |   const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
13 |   const { nodes, materials } = useGraph(clone)
14 |   const { actions } = useAnimations(animations, group)
15 | 
16 |   const currentAction = useRef()
17 | 
18 |   useFrame(() => {
19 |     const animation = useGameStore.getState().playerAnimation;
20 |     const nextAction = actions[animation];
21 |   
22 |     if (!nextAction) return;
23 |   
24 |     if (currentAction.current !== nextAction) {
25 |       if (currentAction.current) {
26 |         currentAction.current.fadeOut(0.2);
27 |       }
28 | 
29 |       currentAction.current = nextAction;
30 |   
31 |       if (animation === "jump" || animation === "land") {
32 |         nextAction.loop = LoopOnce;
33 |         nextAction.clampWhenFinished = true;
34 |       } else {
35 |         nextAction.loop = undefined;
36 |         nextAction.clampWhenFinished = false;
37 |       }
38 |   
39 |       nextAction.reset().fadeIn(0.2).play();
40 |     }
41 | 
42 |     if (currentAction.current) {
43 |       const animationSpeed =
44 |         animation === "jump"
45 |           ? 20
46 |           : animation === "land"
47 |           ? 10
48 |           : 1 + 5 * speedRef.current / maxSpeed;
49 |       currentAction.current.setEffectiveTimeScale(animationSpeed);
50 |     }
51 |   });
52 |   
53 |   return (
54 |     <group ref={group} dispose={null}>
55 | 
56 |       <group name="Player" position={[0, -.8, 0]}>
57 |         <group name="Player_1">
58 |           <group name="Mario">
59 |             <group name="AllRoot">
60 |               <group name="JointRoot" position={[0, 0.611, -0.041]}>
61 |                 <primitive object={nodes.Hip} />
62 |                 <primitive object={nodes.Spine1} />
63 |               </group>
64 |             </group>
65 |             <skinnedMesh castShadow receiveShadow name="Face00__MarioFaceMat00" geometry={nodes.Face00__MarioFaceMat00.geometry} material={materials.MarioFaceMat00} skeleton={nodes.Face00__MarioFaceMat00.skeleton}>
66 |               <skinnedMesh castShadow receiveShadow name="Face00__MarioHigeMat00" geometry={nodes.Face00__MarioHigeMat00.geometry} material={materials.MarioHigeMat00} skeleton={nodes.Face00__MarioHigeMat00.skeleton} />
67 |             </skinnedMesh>
68 |             <skinnedMesh castShadow receiveShadow name="Mario__MarioBodyMat00" geometry={nodes.Mario__MarioBodyMat00.geometry} material={materials.MarioBodyMat00} skeleton={nodes.Mario__MarioBodyMat00.skeleton}>
69 |               <skinnedMesh castShadow receiveShadow name="Mario__MarioBodyMat01" geometry={nodes.Mario__MarioBodyMat01.geometry} material={materials.MarioBodyMat01} skeleton={nodes.Mario__MarioBodyMat01.skeleton} />
70 |               <skinnedMesh castShadow receiveShadow name="Mario__MarioFaceMat00" geometry={nodes.Mario__MarioFaceMat00.geometry} material={materials.MarioMetalMat00} skeleton={nodes.Mario__MarioFaceMat00.skeleton} />
71 |               <skinnedMesh castShadow receiveShadow name="Mario__MarioMetalMat00" geometry={nodes.Mario__MarioMetalMat00.geometry} material={materials.MarioMetalMat00} skeleton={nodes.Mario__MarioMetalMat00.skeleton} />
72 |               <skinnedMesh castShadow receiveShadow name="Mario__MarioShoesMat00" geometry={nodes.Mario__MarioShoesMat00.geometry} material={materials.MarioShoesMat00} skeleton={nodes.Mario__MarioShoesMat00.skeleton} />
73 |             </skinnedMesh>
74 |             <skinnedMesh castShadow receiveShadow name="Eyeball__MarioEyeMat00" geometry={nodes.Eyeball__MarioEyeMat00.geometry} material={materials.MarioEyeMat00} skeleton={nodes.Eyeball__MarioEyeMat00.skeleton} />
75 |             <skinnedMesh castShadow receiveShadow name="HandL00__MarioHandMat00" geometry={nodes.HandL00__MarioHandMat00.geometry} material={materials.MarioHandMat00} skeleton={nodes.HandL00__MarioHandMat00.skeleton} />
76 |             <skinnedMesh castShadow receiveShadow name="HandR00__MarioHandMat00" geometry={nodes.HandR00__MarioHandMat00.geometry} material={materials.MarioHandMat00} skeleton={nodes.HandR00__MarioHandMat00.skeleton} />
77 |           </group>
78 |         </group>
79 |       </group>
80 |     </group>
81 |   )
82 | }
83 | 
84 | useGLTF.preload('/models/player/mario.glb')
85 | 


--------------------------------------------------------------------------------
/src/particles/Dust.jsx:
--------------------------------------------------------------------------------
  1 | import { InstancedMesh2 } from "@three.ez/instanced-mesh";
  2 | import { extend, useFrame, useLoader } from "@react-three/fiber";
  3 | import { useMemo, useRef } from "react";
  4 | import {
  5 |   MeshBasicMaterial,
  6 |   PlaneGeometry,
  7 |   Quaternion,
  8 |   TextureLoader,
  9 |   Vector3,
 10 |   Euler,
 11 | } from "three";
 12 | import { useGameStore } from "../store/store";
 13 | 
 14 | extend({ InstancedMesh2 });
 15 | 
 16 | export const Dust = () => {
 17 |   const ref = useRef(null);
 18 |   const lifeTime = 1;
 19 |   const speed = 1;
 20 |   const direction = new Vector3(0, 0.5, 0).normalize();
 21 |   let time = 0;
 22 |   const dustTexture = useLoader(TextureLoader, "/textures/dust/dust.png");
 23 | 
 24 |   const geometry = useMemo(() => new PlaneGeometry(0.2, 0.2), []);
 25 | 
 26 |   const material = useMemo(
 27 |     () =>
 28 |       new MeshBasicMaterial({
 29 |         color: 0xffffff,
 30 |         map: dustTexture,
 31 |         alphaMap: dustTexture,
 32 |         depthWrite: false,
 33 |         transparent: true,
 34 |       }),
 35 |     [dustTexture]
 36 |   );
 37 | 
 38 |   let landingAnimation = false;
 39 | 
 40 |   useFrame((state, delta) => {
 41 |     if (!ref.current || ref.current.instancesCount >= 1000) return;
 42 |     const playerTranslation = useGameStore.getState().playerPosition;
 43 |     const playerAnimation = useGameStore.getState().playerAnimation;
 44 |     const camera = state.camera;
 45 |     if (!playerTranslation) return;
 46 |     const { x, y, z } = playerTranslation;
 47 | 
 48 |     const elapsedTime = state.clock.getElapsedTime();
 49 | 
 50 |     if (elapsedTime - time > Math.random() * 0.5 && playerAnimation === "run") {
 51 |       time = elapsedTime;
 52 |       landingAnimation = false;
 53 |       ref.current.addInstances(2, (obj) => {
 54 |         obj.position.copy({
 55 |           x: x + (Math.random() - 0.5) * 0.4,
 56 |           y: y - 0.8,
 57 |           z: z + (Math.random() - 0.5) * 0.4,
 58 |         });
 59 |         const scale = Math.random() + 0.6;
 60 |         obj.scale.set(scale, scale, scale);
 61 |         obj.currentTime = 0;
 62 |         obj.randomZRotation = Math.random() * Math.PI * 2;
 63 |       });
 64 |     }
 65 | 
 66 |     if (playerAnimation === "land" && !landingAnimation) {
 67 |       const particleCount = 9;
 68 |       const radius = 0.1;
 69 |       for (let i = 0; i < particleCount; i++) {
 70 |         const angle = (i / particleCount) * Math.PI * 2;
 71 |         const dir = new Vector3(
 72 |           Math.cos(angle),
 73 |           0.4,
 74 |           Math.sin(angle)
 75 |         ).normalize();
 76 |         const px = x + dir.x * radius + (Math.random() - 0.5) * 0.5;
 77 |         const pz = z + dir.z * radius + (Math.random() - 0.5) * 0.5;
 78 | 
 79 |         ref.current.addInstances(1, (obj) => {
 80 |           obj.position.set(px, y - 0.7, pz);
 81 |           // obj.quaternion.random();
 82 |           const scale = Math.random() + 1;
 83 |           obj.scale.set(scale, scale, scale);
 84 |           obj.currentTime = 0;
 85 |           obj.direction = dir.clone();
 86 |           obj.randomZRotation = Math.random() * Math.PI * 2;
 87 |         });
 88 |       }
 89 |       landingAnimation = true;
 90 |     }
 91 | 
 92 |     ref.current.updateInstances((obj) => {
 93 |       obj.currentTime += delta;
 94 |       if (obj.direction) {
 95 |         obj.position.addScaledVector(obj.direction, 2 * delta);
 96 |       } else {
 97 |         obj.position.addScaledVector(direction, speed * delta);
 98 |       }
 99 |     const toCamera = new Vector3().subVectors(camera.position, obj.position).normalize();
100 |     
101 | 
102 |     const particleQuaternion = new Quaternion().setFromUnitVectors(new Vector3(0, 0, 1), toCamera);
103 |     
104 |     const randomRotationQuaternion = new Quaternion().setFromEuler(new Euler(0, 0, obj.randomZRotation));
105 |     
106 |     particleQuaternion.multiply(randomRotationQuaternion);
107 |     
108 |     obj.quaternion.copy(particleQuaternion);
109 |       const scale = Math.max(0, lifeTime - obj.currentTime * 2);
110 |       obj.scale.set(scale, scale, scale);
111 |       // obj.opacity = Math.max(0, lifeTime - obj.currentTime * 2);
112 | 
113 |       if (obj.currentTime >= lifeTime + 2) {
114 |         obj.remove();
115 |         return;
116 |       }
117 |     });
118 |   });
119 | 
120 |   return (
121 |     <instancedMesh2
122 |       ref={ref}
123 |       args={[geometry, material, { createEntities: true }]}
124 |       frustumCulled={false}
125 |     />
126 |   );
127 | };
128 | 


--------------------------------------------------------------------------------
/src/store/store.js:
--------------------------------------------------------------------------------
 1 | import { Vector3 } from "three";
 2 | import { create } from "zustand";
 3 | 
 4 | export const useGameStore = create((set) => ({
 5 |   playerPosition: null,
 6 |   setPlayerPosition: (position) => set({ playerPosition: position }),
 7 |   playerAnimation: "idle",
 8 |   setPlayerAnimation: (animation) => set({ playerAnimation: animation }),
 9 |   joystick: {x: 0, y: 0, distance: 0},
10 |   setJoystick: (joystick) => set({ joystick: joystick }),
11 |   jumpButtonPressed: false,
12 |   setJumpButtonPressed: (pressed) => set({ jumpButtonPressed: pressed }),
13 |   lookAtCharacter: new Vector3(),
14 |   setLookAtCharacter: (lookAtCharacter) => set({ lookAtCharacter: lookAtCharacter }),
15 | }));
16 | 


--------------------------------------------------------------------------------
/vite.config.js:
--------------------------------------------------------------------------------
1 | import { defineConfig } from 'vite'
2 | import react from '@vitejs/plugin-react-swc'
3 | 
4 | // https://vite.dev/config/
5 | export default defineConfig({
6 |   plugins: [react()],
7 | })
8 | 


--------------------------------------------------------------------------------
